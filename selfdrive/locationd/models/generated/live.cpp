#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_742148225835129227) {
   out_742148225835129227[0] = 0;
   out_742148225835129227[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_742148225835129227[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_742148225835129227[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_742148225835129227[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_742148225835129227[5] = -sin(in_vec[1]);
   out_742148225835129227[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_742148225835129227[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_742148225835129227[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_742148225835129227[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_742148225835129227[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_742148225835129227[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_742148225835129227[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_742148225835129227[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_742148225835129227[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_742148225835129227[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_742148225835129227[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_742148225835129227[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4932625361128218531) {
   out_4932625361128218531[0] = delta_x[0] + nom_x[0];
   out_4932625361128218531[1] = delta_x[1] + nom_x[1];
   out_4932625361128218531[2] = delta_x[2] + nom_x[2];
   out_4932625361128218531[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4932625361128218531[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4932625361128218531[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4932625361128218531[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4932625361128218531[7] = delta_x[6] + nom_x[7];
   out_4932625361128218531[8] = delta_x[7] + nom_x[8];
   out_4932625361128218531[9] = delta_x[8] + nom_x[9];
   out_4932625361128218531[10] = delta_x[9] + nom_x[10];
   out_4932625361128218531[11] = delta_x[10] + nom_x[11];
   out_4932625361128218531[12] = delta_x[11] + nom_x[12];
   out_4932625361128218531[13] = delta_x[12] + nom_x[13];
   out_4932625361128218531[14] = delta_x[13] + nom_x[14];
   out_4932625361128218531[15] = delta_x[14] + nom_x[15];
   out_4932625361128218531[16] = delta_x[15] + nom_x[16];
   out_4932625361128218531[17] = delta_x[16] + nom_x[17];
   out_4932625361128218531[18] = delta_x[17] + nom_x[18];
   out_4932625361128218531[19] = delta_x[18] + nom_x[19];
   out_4932625361128218531[20] = delta_x[19] + nom_x[20];
   out_4932625361128218531[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5091719650809670856) {
   out_5091719650809670856[0] = -nom_x[0] + true_x[0];
   out_5091719650809670856[1] = -nom_x[1] + true_x[1];
   out_5091719650809670856[2] = -nom_x[2] + true_x[2];
   out_5091719650809670856[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5091719650809670856[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5091719650809670856[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5091719650809670856[6] = -nom_x[7] + true_x[7];
   out_5091719650809670856[7] = -nom_x[8] + true_x[8];
   out_5091719650809670856[8] = -nom_x[9] + true_x[9];
   out_5091719650809670856[9] = -nom_x[10] + true_x[10];
   out_5091719650809670856[10] = -nom_x[11] + true_x[11];
   out_5091719650809670856[11] = -nom_x[12] + true_x[12];
   out_5091719650809670856[12] = -nom_x[13] + true_x[13];
   out_5091719650809670856[13] = -nom_x[14] + true_x[14];
   out_5091719650809670856[14] = -nom_x[15] + true_x[15];
   out_5091719650809670856[15] = -nom_x[16] + true_x[16];
   out_5091719650809670856[16] = -nom_x[17] + true_x[17];
   out_5091719650809670856[17] = -nom_x[18] + true_x[18];
   out_5091719650809670856[18] = -nom_x[19] + true_x[19];
   out_5091719650809670856[19] = -nom_x[20] + true_x[20];
   out_5091719650809670856[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1669533905452122654) {
   out_1669533905452122654[0] = 1.0;
   out_1669533905452122654[1] = 0;
   out_1669533905452122654[2] = 0;
   out_1669533905452122654[3] = 0;
   out_1669533905452122654[4] = 0;
   out_1669533905452122654[5] = 0;
   out_1669533905452122654[6] = 0;
   out_1669533905452122654[7] = 0;
   out_1669533905452122654[8] = 0;
   out_1669533905452122654[9] = 0;
   out_1669533905452122654[10] = 0;
   out_1669533905452122654[11] = 0;
   out_1669533905452122654[12] = 0;
   out_1669533905452122654[13] = 0;
   out_1669533905452122654[14] = 0;
   out_1669533905452122654[15] = 0;
   out_1669533905452122654[16] = 0;
   out_1669533905452122654[17] = 0;
   out_1669533905452122654[18] = 0;
   out_1669533905452122654[19] = 0;
   out_1669533905452122654[20] = 0;
   out_1669533905452122654[21] = 0;
   out_1669533905452122654[22] = 1.0;
   out_1669533905452122654[23] = 0;
   out_1669533905452122654[24] = 0;
   out_1669533905452122654[25] = 0;
   out_1669533905452122654[26] = 0;
   out_1669533905452122654[27] = 0;
   out_1669533905452122654[28] = 0;
   out_1669533905452122654[29] = 0;
   out_1669533905452122654[30] = 0;
   out_1669533905452122654[31] = 0;
   out_1669533905452122654[32] = 0;
   out_1669533905452122654[33] = 0;
   out_1669533905452122654[34] = 0;
   out_1669533905452122654[35] = 0;
   out_1669533905452122654[36] = 0;
   out_1669533905452122654[37] = 0;
   out_1669533905452122654[38] = 0;
   out_1669533905452122654[39] = 0;
   out_1669533905452122654[40] = 0;
   out_1669533905452122654[41] = 0;
   out_1669533905452122654[42] = 0;
   out_1669533905452122654[43] = 0;
   out_1669533905452122654[44] = 1.0;
   out_1669533905452122654[45] = 0;
   out_1669533905452122654[46] = 0;
   out_1669533905452122654[47] = 0;
   out_1669533905452122654[48] = 0;
   out_1669533905452122654[49] = 0;
   out_1669533905452122654[50] = 0;
   out_1669533905452122654[51] = 0;
   out_1669533905452122654[52] = 0;
   out_1669533905452122654[53] = 0;
   out_1669533905452122654[54] = 0;
   out_1669533905452122654[55] = 0;
   out_1669533905452122654[56] = 0;
   out_1669533905452122654[57] = 0;
   out_1669533905452122654[58] = 0;
   out_1669533905452122654[59] = 0;
   out_1669533905452122654[60] = 0;
   out_1669533905452122654[61] = 0;
   out_1669533905452122654[62] = 0;
   out_1669533905452122654[63] = 0;
   out_1669533905452122654[64] = 0;
   out_1669533905452122654[65] = 0;
   out_1669533905452122654[66] = -0.5*state[4];
   out_1669533905452122654[67] = -0.5*state[5];
   out_1669533905452122654[68] = -0.5*state[6];
   out_1669533905452122654[69] = 0;
   out_1669533905452122654[70] = 0;
   out_1669533905452122654[71] = 0;
   out_1669533905452122654[72] = 0;
   out_1669533905452122654[73] = 0;
   out_1669533905452122654[74] = 0;
   out_1669533905452122654[75] = 0;
   out_1669533905452122654[76] = 0;
   out_1669533905452122654[77] = 0;
   out_1669533905452122654[78] = 0;
   out_1669533905452122654[79] = 0;
   out_1669533905452122654[80] = 0;
   out_1669533905452122654[81] = 0;
   out_1669533905452122654[82] = 0;
   out_1669533905452122654[83] = 0;
   out_1669533905452122654[84] = 0;
   out_1669533905452122654[85] = 0;
   out_1669533905452122654[86] = 0;
   out_1669533905452122654[87] = 0.5*state[3];
   out_1669533905452122654[88] = 0.5*state[6];
   out_1669533905452122654[89] = -0.5*state[5];
   out_1669533905452122654[90] = 0;
   out_1669533905452122654[91] = 0;
   out_1669533905452122654[92] = 0;
   out_1669533905452122654[93] = 0;
   out_1669533905452122654[94] = 0;
   out_1669533905452122654[95] = 0;
   out_1669533905452122654[96] = 0;
   out_1669533905452122654[97] = 0;
   out_1669533905452122654[98] = 0;
   out_1669533905452122654[99] = 0;
   out_1669533905452122654[100] = 0;
   out_1669533905452122654[101] = 0;
   out_1669533905452122654[102] = 0;
   out_1669533905452122654[103] = 0;
   out_1669533905452122654[104] = 0;
   out_1669533905452122654[105] = 0;
   out_1669533905452122654[106] = 0;
   out_1669533905452122654[107] = 0;
   out_1669533905452122654[108] = -0.5*state[6];
   out_1669533905452122654[109] = 0.5*state[3];
   out_1669533905452122654[110] = 0.5*state[4];
   out_1669533905452122654[111] = 0;
   out_1669533905452122654[112] = 0;
   out_1669533905452122654[113] = 0;
   out_1669533905452122654[114] = 0;
   out_1669533905452122654[115] = 0;
   out_1669533905452122654[116] = 0;
   out_1669533905452122654[117] = 0;
   out_1669533905452122654[118] = 0;
   out_1669533905452122654[119] = 0;
   out_1669533905452122654[120] = 0;
   out_1669533905452122654[121] = 0;
   out_1669533905452122654[122] = 0;
   out_1669533905452122654[123] = 0;
   out_1669533905452122654[124] = 0;
   out_1669533905452122654[125] = 0;
   out_1669533905452122654[126] = 0;
   out_1669533905452122654[127] = 0;
   out_1669533905452122654[128] = 0;
   out_1669533905452122654[129] = 0.5*state[5];
   out_1669533905452122654[130] = -0.5*state[4];
   out_1669533905452122654[131] = 0.5*state[3];
   out_1669533905452122654[132] = 0;
   out_1669533905452122654[133] = 0;
   out_1669533905452122654[134] = 0;
   out_1669533905452122654[135] = 0;
   out_1669533905452122654[136] = 0;
   out_1669533905452122654[137] = 0;
   out_1669533905452122654[138] = 0;
   out_1669533905452122654[139] = 0;
   out_1669533905452122654[140] = 0;
   out_1669533905452122654[141] = 0;
   out_1669533905452122654[142] = 0;
   out_1669533905452122654[143] = 0;
   out_1669533905452122654[144] = 0;
   out_1669533905452122654[145] = 0;
   out_1669533905452122654[146] = 0;
   out_1669533905452122654[147] = 0;
   out_1669533905452122654[148] = 0;
   out_1669533905452122654[149] = 0;
   out_1669533905452122654[150] = 0;
   out_1669533905452122654[151] = 0;
   out_1669533905452122654[152] = 0;
   out_1669533905452122654[153] = 1.0;
   out_1669533905452122654[154] = 0;
   out_1669533905452122654[155] = 0;
   out_1669533905452122654[156] = 0;
   out_1669533905452122654[157] = 0;
   out_1669533905452122654[158] = 0;
   out_1669533905452122654[159] = 0;
   out_1669533905452122654[160] = 0;
   out_1669533905452122654[161] = 0;
   out_1669533905452122654[162] = 0;
   out_1669533905452122654[163] = 0;
   out_1669533905452122654[164] = 0;
   out_1669533905452122654[165] = 0;
   out_1669533905452122654[166] = 0;
   out_1669533905452122654[167] = 0;
   out_1669533905452122654[168] = 0;
   out_1669533905452122654[169] = 0;
   out_1669533905452122654[170] = 0;
   out_1669533905452122654[171] = 0;
   out_1669533905452122654[172] = 0;
   out_1669533905452122654[173] = 0;
   out_1669533905452122654[174] = 0;
   out_1669533905452122654[175] = 1.0;
   out_1669533905452122654[176] = 0;
   out_1669533905452122654[177] = 0;
   out_1669533905452122654[178] = 0;
   out_1669533905452122654[179] = 0;
   out_1669533905452122654[180] = 0;
   out_1669533905452122654[181] = 0;
   out_1669533905452122654[182] = 0;
   out_1669533905452122654[183] = 0;
   out_1669533905452122654[184] = 0;
   out_1669533905452122654[185] = 0;
   out_1669533905452122654[186] = 0;
   out_1669533905452122654[187] = 0;
   out_1669533905452122654[188] = 0;
   out_1669533905452122654[189] = 0;
   out_1669533905452122654[190] = 0;
   out_1669533905452122654[191] = 0;
   out_1669533905452122654[192] = 0;
   out_1669533905452122654[193] = 0;
   out_1669533905452122654[194] = 0;
   out_1669533905452122654[195] = 0;
   out_1669533905452122654[196] = 0;
   out_1669533905452122654[197] = 1.0;
   out_1669533905452122654[198] = 0;
   out_1669533905452122654[199] = 0;
   out_1669533905452122654[200] = 0;
   out_1669533905452122654[201] = 0;
   out_1669533905452122654[202] = 0;
   out_1669533905452122654[203] = 0;
   out_1669533905452122654[204] = 0;
   out_1669533905452122654[205] = 0;
   out_1669533905452122654[206] = 0;
   out_1669533905452122654[207] = 0;
   out_1669533905452122654[208] = 0;
   out_1669533905452122654[209] = 0;
   out_1669533905452122654[210] = 0;
   out_1669533905452122654[211] = 0;
   out_1669533905452122654[212] = 0;
   out_1669533905452122654[213] = 0;
   out_1669533905452122654[214] = 0;
   out_1669533905452122654[215] = 0;
   out_1669533905452122654[216] = 0;
   out_1669533905452122654[217] = 0;
   out_1669533905452122654[218] = 0;
   out_1669533905452122654[219] = 1.0;
   out_1669533905452122654[220] = 0;
   out_1669533905452122654[221] = 0;
   out_1669533905452122654[222] = 0;
   out_1669533905452122654[223] = 0;
   out_1669533905452122654[224] = 0;
   out_1669533905452122654[225] = 0;
   out_1669533905452122654[226] = 0;
   out_1669533905452122654[227] = 0;
   out_1669533905452122654[228] = 0;
   out_1669533905452122654[229] = 0;
   out_1669533905452122654[230] = 0;
   out_1669533905452122654[231] = 0;
   out_1669533905452122654[232] = 0;
   out_1669533905452122654[233] = 0;
   out_1669533905452122654[234] = 0;
   out_1669533905452122654[235] = 0;
   out_1669533905452122654[236] = 0;
   out_1669533905452122654[237] = 0;
   out_1669533905452122654[238] = 0;
   out_1669533905452122654[239] = 0;
   out_1669533905452122654[240] = 0;
   out_1669533905452122654[241] = 1.0;
   out_1669533905452122654[242] = 0;
   out_1669533905452122654[243] = 0;
   out_1669533905452122654[244] = 0;
   out_1669533905452122654[245] = 0;
   out_1669533905452122654[246] = 0;
   out_1669533905452122654[247] = 0;
   out_1669533905452122654[248] = 0;
   out_1669533905452122654[249] = 0;
   out_1669533905452122654[250] = 0;
   out_1669533905452122654[251] = 0;
   out_1669533905452122654[252] = 0;
   out_1669533905452122654[253] = 0;
   out_1669533905452122654[254] = 0;
   out_1669533905452122654[255] = 0;
   out_1669533905452122654[256] = 0;
   out_1669533905452122654[257] = 0;
   out_1669533905452122654[258] = 0;
   out_1669533905452122654[259] = 0;
   out_1669533905452122654[260] = 0;
   out_1669533905452122654[261] = 0;
   out_1669533905452122654[262] = 0;
   out_1669533905452122654[263] = 1.0;
   out_1669533905452122654[264] = 0;
   out_1669533905452122654[265] = 0;
   out_1669533905452122654[266] = 0;
   out_1669533905452122654[267] = 0;
   out_1669533905452122654[268] = 0;
   out_1669533905452122654[269] = 0;
   out_1669533905452122654[270] = 0;
   out_1669533905452122654[271] = 0;
   out_1669533905452122654[272] = 0;
   out_1669533905452122654[273] = 0;
   out_1669533905452122654[274] = 0;
   out_1669533905452122654[275] = 0;
   out_1669533905452122654[276] = 0;
   out_1669533905452122654[277] = 0;
   out_1669533905452122654[278] = 0;
   out_1669533905452122654[279] = 0;
   out_1669533905452122654[280] = 0;
   out_1669533905452122654[281] = 0;
   out_1669533905452122654[282] = 0;
   out_1669533905452122654[283] = 0;
   out_1669533905452122654[284] = 0;
   out_1669533905452122654[285] = 1.0;
   out_1669533905452122654[286] = 0;
   out_1669533905452122654[287] = 0;
   out_1669533905452122654[288] = 0;
   out_1669533905452122654[289] = 0;
   out_1669533905452122654[290] = 0;
   out_1669533905452122654[291] = 0;
   out_1669533905452122654[292] = 0;
   out_1669533905452122654[293] = 0;
   out_1669533905452122654[294] = 0;
   out_1669533905452122654[295] = 0;
   out_1669533905452122654[296] = 0;
   out_1669533905452122654[297] = 0;
   out_1669533905452122654[298] = 0;
   out_1669533905452122654[299] = 0;
   out_1669533905452122654[300] = 0;
   out_1669533905452122654[301] = 0;
   out_1669533905452122654[302] = 0;
   out_1669533905452122654[303] = 0;
   out_1669533905452122654[304] = 0;
   out_1669533905452122654[305] = 0;
   out_1669533905452122654[306] = 0;
   out_1669533905452122654[307] = 1.0;
   out_1669533905452122654[308] = 0;
   out_1669533905452122654[309] = 0;
   out_1669533905452122654[310] = 0;
   out_1669533905452122654[311] = 0;
   out_1669533905452122654[312] = 0;
   out_1669533905452122654[313] = 0;
   out_1669533905452122654[314] = 0;
   out_1669533905452122654[315] = 0;
   out_1669533905452122654[316] = 0;
   out_1669533905452122654[317] = 0;
   out_1669533905452122654[318] = 0;
   out_1669533905452122654[319] = 0;
   out_1669533905452122654[320] = 0;
   out_1669533905452122654[321] = 0;
   out_1669533905452122654[322] = 0;
   out_1669533905452122654[323] = 0;
   out_1669533905452122654[324] = 0;
   out_1669533905452122654[325] = 0;
   out_1669533905452122654[326] = 0;
   out_1669533905452122654[327] = 0;
   out_1669533905452122654[328] = 0;
   out_1669533905452122654[329] = 1.0;
   out_1669533905452122654[330] = 0;
   out_1669533905452122654[331] = 0;
   out_1669533905452122654[332] = 0;
   out_1669533905452122654[333] = 0;
   out_1669533905452122654[334] = 0;
   out_1669533905452122654[335] = 0;
   out_1669533905452122654[336] = 0;
   out_1669533905452122654[337] = 0;
   out_1669533905452122654[338] = 0;
   out_1669533905452122654[339] = 0;
   out_1669533905452122654[340] = 0;
   out_1669533905452122654[341] = 0;
   out_1669533905452122654[342] = 0;
   out_1669533905452122654[343] = 0;
   out_1669533905452122654[344] = 0;
   out_1669533905452122654[345] = 0;
   out_1669533905452122654[346] = 0;
   out_1669533905452122654[347] = 0;
   out_1669533905452122654[348] = 0;
   out_1669533905452122654[349] = 0;
   out_1669533905452122654[350] = 0;
   out_1669533905452122654[351] = 1.0;
   out_1669533905452122654[352] = 0;
   out_1669533905452122654[353] = 0;
   out_1669533905452122654[354] = 0;
   out_1669533905452122654[355] = 0;
   out_1669533905452122654[356] = 0;
   out_1669533905452122654[357] = 0;
   out_1669533905452122654[358] = 0;
   out_1669533905452122654[359] = 0;
   out_1669533905452122654[360] = 0;
   out_1669533905452122654[361] = 0;
   out_1669533905452122654[362] = 0;
   out_1669533905452122654[363] = 0;
   out_1669533905452122654[364] = 0;
   out_1669533905452122654[365] = 0;
   out_1669533905452122654[366] = 0;
   out_1669533905452122654[367] = 0;
   out_1669533905452122654[368] = 0;
   out_1669533905452122654[369] = 0;
   out_1669533905452122654[370] = 0;
   out_1669533905452122654[371] = 0;
   out_1669533905452122654[372] = 0;
   out_1669533905452122654[373] = 1.0;
   out_1669533905452122654[374] = 0;
   out_1669533905452122654[375] = 0;
   out_1669533905452122654[376] = 0;
   out_1669533905452122654[377] = 0;
   out_1669533905452122654[378] = 0;
   out_1669533905452122654[379] = 0;
   out_1669533905452122654[380] = 0;
   out_1669533905452122654[381] = 0;
   out_1669533905452122654[382] = 0;
   out_1669533905452122654[383] = 0;
   out_1669533905452122654[384] = 0;
   out_1669533905452122654[385] = 0;
   out_1669533905452122654[386] = 0;
   out_1669533905452122654[387] = 0;
   out_1669533905452122654[388] = 0;
   out_1669533905452122654[389] = 0;
   out_1669533905452122654[390] = 0;
   out_1669533905452122654[391] = 0;
   out_1669533905452122654[392] = 0;
   out_1669533905452122654[393] = 0;
   out_1669533905452122654[394] = 0;
   out_1669533905452122654[395] = 1.0;
   out_1669533905452122654[396] = 0;
   out_1669533905452122654[397] = 0;
   out_1669533905452122654[398] = 0;
   out_1669533905452122654[399] = 0;
   out_1669533905452122654[400] = 0;
   out_1669533905452122654[401] = 0;
   out_1669533905452122654[402] = 0;
   out_1669533905452122654[403] = 0;
   out_1669533905452122654[404] = 0;
   out_1669533905452122654[405] = 0;
   out_1669533905452122654[406] = 0;
   out_1669533905452122654[407] = 0;
   out_1669533905452122654[408] = 0;
   out_1669533905452122654[409] = 0;
   out_1669533905452122654[410] = 0;
   out_1669533905452122654[411] = 0;
   out_1669533905452122654[412] = 0;
   out_1669533905452122654[413] = 0;
   out_1669533905452122654[414] = 0;
   out_1669533905452122654[415] = 0;
   out_1669533905452122654[416] = 0;
   out_1669533905452122654[417] = 1.0;
   out_1669533905452122654[418] = 0;
   out_1669533905452122654[419] = 0;
   out_1669533905452122654[420] = 0;
   out_1669533905452122654[421] = 0;
   out_1669533905452122654[422] = 0;
   out_1669533905452122654[423] = 0;
   out_1669533905452122654[424] = 0;
   out_1669533905452122654[425] = 0;
   out_1669533905452122654[426] = 0;
   out_1669533905452122654[427] = 0;
   out_1669533905452122654[428] = 0;
   out_1669533905452122654[429] = 0;
   out_1669533905452122654[430] = 0;
   out_1669533905452122654[431] = 0;
   out_1669533905452122654[432] = 0;
   out_1669533905452122654[433] = 0;
   out_1669533905452122654[434] = 0;
   out_1669533905452122654[435] = 0;
   out_1669533905452122654[436] = 0;
   out_1669533905452122654[437] = 0;
   out_1669533905452122654[438] = 0;
   out_1669533905452122654[439] = 1.0;
   out_1669533905452122654[440] = 0;
   out_1669533905452122654[441] = 0;
   out_1669533905452122654[442] = 0;
   out_1669533905452122654[443] = 0;
   out_1669533905452122654[444] = 0;
   out_1669533905452122654[445] = 0;
   out_1669533905452122654[446] = 0;
   out_1669533905452122654[447] = 0;
   out_1669533905452122654[448] = 0;
   out_1669533905452122654[449] = 0;
   out_1669533905452122654[450] = 0;
   out_1669533905452122654[451] = 0;
   out_1669533905452122654[452] = 0;
   out_1669533905452122654[453] = 0;
   out_1669533905452122654[454] = 0;
   out_1669533905452122654[455] = 0;
   out_1669533905452122654[456] = 0;
   out_1669533905452122654[457] = 0;
   out_1669533905452122654[458] = 0;
   out_1669533905452122654[459] = 0;
   out_1669533905452122654[460] = 0;
   out_1669533905452122654[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_452407580724599486) {
   out_452407580724599486[0] = dt*state[7] + state[0];
   out_452407580724599486[1] = dt*state[8] + state[1];
   out_452407580724599486[2] = dt*state[9] + state[2];
   out_452407580724599486[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_452407580724599486[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_452407580724599486[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_452407580724599486[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_452407580724599486[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_452407580724599486[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_452407580724599486[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_452407580724599486[10] = state[10];
   out_452407580724599486[11] = state[11];
   out_452407580724599486[12] = state[12];
   out_452407580724599486[13] = state[13];
   out_452407580724599486[14] = state[14];
   out_452407580724599486[15] = state[15];
   out_452407580724599486[16] = state[16];
   out_452407580724599486[17] = state[17];
   out_452407580724599486[18] = state[18];
   out_452407580724599486[19] = state[19];
   out_452407580724599486[20] = state[20];
   out_452407580724599486[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8363446884750752161) {
   out_8363446884750752161[0] = 1;
   out_8363446884750752161[1] = 0;
   out_8363446884750752161[2] = 0;
   out_8363446884750752161[3] = 0;
   out_8363446884750752161[4] = 0;
   out_8363446884750752161[5] = 0;
   out_8363446884750752161[6] = dt;
   out_8363446884750752161[7] = 0;
   out_8363446884750752161[8] = 0;
   out_8363446884750752161[9] = 0;
   out_8363446884750752161[10] = 0;
   out_8363446884750752161[11] = 0;
   out_8363446884750752161[12] = 0;
   out_8363446884750752161[13] = 0;
   out_8363446884750752161[14] = 0;
   out_8363446884750752161[15] = 0;
   out_8363446884750752161[16] = 0;
   out_8363446884750752161[17] = 0;
   out_8363446884750752161[18] = 0;
   out_8363446884750752161[19] = 0;
   out_8363446884750752161[20] = 0;
   out_8363446884750752161[21] = 0;
   out_8363446884750752161[22] = 1;
   out_8363446884750752161[23] = 0;
   out_8363446884750752161[24] = 0;
   out_8363446884750752161[25] = 0;
   out_8363446884750752161[26] = 0;
   out_8363446884750752161[27] = 0;
   out_8363446884750752161[28] = dt;
   out_8363446884750752161[29] = 0;
   out_8363446884750752161[30] = 0;
   out_8363446884750752161[31] = 0;
   out_8363446884750752161[32] = 0;
   out_8363446884750752161[33] = 0;
   out_8363446884750752161[34] = 0;
   out_8363446884750752161[35] = 0;
   out_8363446884750752161[36] = 0;
   out_8363446884750752161[37] = 0;
   out_8363446884750752161[38] = 0;
   out_8363446884750752161[39] = 0;
   out_8363446884750752161[40] = 0;
   out_8363446884750752161[41] = 0;
   out_8363446884750752161[42] = 0;
   out_8363446884750752161[43] = 0;
   out_8363446884750752161[44] = 1;
   out_8363446884750752161[45] = 0;
   out_8363446884750752161[46] = 0;
   out_8363446884750752161[47] = 0;
   out_8363446884750752161[48] = 0;
   out_8363446884750752161[49] = 0;
   out_8363446884750752161[50] = dt;
   out_8363446884750752161[51] = 0;
   out_8363446884750752161[52] = 0;
   out_8363446884750752161[53] = 0;
   out_8363446884750752161[54] = 0;
   out_8363446884750752161[55] = 0;
   out_8363446884750752161[56] = 0;
   out_8363446884750752161[57] = 0;
   out_8363446884750752161[58] = 0;
   out_8363446884750752161[59] = 0;
   out_8363446884750752161[60] = 0;
   out_8363446884750752161[61] = 0;
   out_8363446884750752161[62] = 0;
   out_8363446884750752161[63] = 0;
   out_8363446884750752161[64] = 0;
   out_8363446884750752161[65] = 0;
   out_8363446884750752161[66] = 1;
   out_8363446884750752161[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8363446884750752161[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8363446884750752161[69] = 0;
   out_8363446884750752161[70] = 0;
   out_8363446884750752161[71] = 0;
   out_8363446884750752161[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8363446884750752161[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8363446884750752161[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8363446884750752161[75] = 0;
   out_8363446884750752161[76] = 0;
   out_8363446884750752161[77] = 0;
   out_8363446884750752161[78] = 0;
   out_8363446884750752161[79] = 0;
   out_8363446884750752161[80] = 0;
   out_8363446884750752161[81] = 0;
   out_8363446884750752161[82] = 0;
   out_8363446884750752161[83] = 0;
   out_8363446884750752161[84] = 0;
   out_8363446884750752161[85] = 0;
   out_8363446884750752161[86] = 0;
   out_8363446884750752161[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8363446884750752161[88] = 1;
   out_8363446884750752161[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8363446884750752161[90] = 0;
   out_8363446884750752161[91] = 0;
   out_8363446884750752161[92] = 0;
   out_8363446884750752161[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8363446884750752161[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8363446884750752161[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8363446884750752161[96] = 0;
   out_8363446884750752161[97] = 0;
   out_8363446884750752161[98] = 0;
   out_8363446884750752161[99] = 0;
   out_8363446884750752161[100] = 0;
   out_8363446884750752161[101] = 0;
   out_8363446884750752161[102] = 0;
   out_8363446884750752161[103] = 0;
   out_8363446884750752161[104] = 0;
   out_8363446884750752161[105] = 0;
   out_8363446884750752161[106] = 0;
   out_8363446884750752161[107] = 0;
   out_8363446884750752161[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8363446884750752161[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8363446884750752161[110] = 1;
   out_8363446884750752161[111] = 0;
   out_8363446884750752161[112] = 0;
   out_8363446884750752161[113] = 0;
   out_8363446884750752161[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8363446884750752161[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8363446884750752161[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8363446884750752161[117] = 0;
   out_8363446884750752161[118] = 0;
   out_8363446884750752161[119] = 0;
   out_8363446884750752161[120] = 0;
   out_8363446884750752161[121] = 0;
   out_8363446884750752161[122] = 0;
   out_8363446884750752161[123] = 0;
   out_8363446884750752161[124] = 0;
   out_8363446884750752161[125] = 0;
   out_8363446884750752161[126] = 0;
   out_8363446884750752161[127] = 0;
   out_8363446884750752161[128] = 0;
   out_8363446884750752161[129] = 0;
   out_8363446884750752161[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8363446884750752161[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8363446884750752161[132] = 1;
   out_8363446884750752161[133] = 0;
   out_8363446884750752161[134] = 0;
   out_8363446884750752161[135] = 0;
   out_8363446884750752161[136] = 0;
   out_8363446884750752161[137] = 0;
   out_8363446884750752161[138] = 0;
   out_8363446884750752161[139] = 0;
   out_8363446884750752161[140] = 0;
   out_8363446884750752161[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8363446884750752161[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8363446884750752161[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8363446884750752161[144] = 0;
   out_8363446884750752161[145] = 0;
   out_8363446884750752161[146] = 0;
   out_8363446884750752161[147] = 0;
   out_8363446884750752161[148] = 0;
   out_8363446884750752161[149] = 0;
   out_8363446884750752161[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8363446884750752161[151] = 0;
   out_8363446884750752161[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8363446884750752161[153] = 0;
   out_8363446884750752161[154] = 1;
   out_8363446884750752161[155] = 0;
   out_8363446884750752161[156] = 0;
   out_8363446884750752161[157] = 0;
   out_8363446884750752161[158] = 0;
   out_8363446884750752161[159] = 0;
   out_8363446884750752161[160] = 0;
   out_8363446884750752161[161] = 0;
   out_8363446884750752161[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8363446884750752161[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8363446884750752161[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8363446884750752161[165] = 0;
   out_8363446884750752161[166] = 0;
   out_8363446884750752161[167] = 0;
   out_8363446884750752161[168] = 0;
   out_8363446884750752161[169] = 0;
   out_8363446884750752161[170] = 0;
   out_8363446884750752161[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8363446884750752161[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8363446884750752161[173] = 0;
   out_8363446884750752161[174] = 0;
   out_8363446884750752161[175] = 0;
   out_8363446884750752161[176] = 1;
   out_8363446884750752161[177] = 0;
   out_8363446884750752161[178] = 0;
   out_8363446884750752161[179] = 0;
   out_8363446884750752161[180] = 0;
   out_8363446884750752161[181] = 0;
   out_8363446884750752161[182] = 0;
   out_8363446884750752161[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8363446884750752161[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8363446884750752161[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8363446884750752161[186] = 0;
   out_8363446884750752161[187] = 0;
   out_8363446884750752161[188] = 0;
   out_8363446884750752161[189] = 0;
   out_8363446884750752161[190] = 0;
   out_8363446884750752161[191] = 0;
   out_8363446884750752161[192] = 0;
   out_8363446884750752161[193] = 0;
   out_8363446884750752161[194] = 0;
   out_8363446884750752161[195] = 0;
   out_8363446884750752161[196] = 0;
   out_8363446884750752161[197] = 0;
   out_8363446884750752161[198] = 1;
   out_8363446884750752161[199] = 0;
   out_8363446884750752161[200] = 0;
   out_8363446884750752161[201] = 0;
   out_8363446884750752161[202] = 0;
   out_8363446884750752161[203] = 0;
   out_8363446884750752161[204] = 0;
   out_8363446884750752161[205] = 0;
   out_8363446884750752161[206] = 0;
   out_8363446884750752161[207] = 0;
   out_8363446884750752161[208] = 0;
   out_8363446884750752161[209] = 0;
   out_8363446884750752161[210] = 0;
   out_8363446884750752161[211] = 0;
   out_8363446884750752161[212] = 0;
   out_8363446884750752161[213] = 0;
   out_8363446884750752161[214] = 0;
   out_8363446884750752161[215] = 0;
   out_8363446884750752161[216] = 0;
   out_8363446884750752161[217] = 0;
   out_8363446884750752161[218] = 0;
   out_8363446884750752161[219] = 0;
   out_8363446884750752161[220] = 1;
   out_8363446884750752161[221] = 0;
   out_8363446884750752161[222] = 0;
   out_8363446884750752161[223] = 0;
   out_8363446884750752161[224] = 0;
   out_8363446884750752161[225] = 0;
   out_8363446884750752161[226] = 0;
   out_8363446884750752161[227] = 0;
   out_8363446884750752161[228] = 0;
   out_8363446884750752161[229] = 0;
   out_8363446884750752161[230] = 0;
   out_8363446884750752161[231] = 0;
   out_8363446884750752161[232] = 0;
   out_8363446884750752161[233] = 0;
   out_8363446884750752161[234] = 0;
   out_8363446884750752161[235] = 0;
   out_8363446884750752161[236] = 0;
   out_8363446884750752161[237] = 0;
   out_8363446884750752161[238] = 0;
   out_8363446884750752161[239] = 0;
   out_8363446884750752161[240] = 0;
   out_8363446884750752161[241] = 0;
   out_8363446884750752161[242] = 1;
   out_8363446884750752161[243] = 0;
   out_8363446884750752161[244] = 0;
   out_8363446884750752161[245] = 0;
   out_8363446884750752161[246] = 0;
   out_8363446884750752161[247] = 0;
   out_8363446884750752161[248] = 0;
   out_8363446884750752161[249] = 0;
   out_8363446884750752161[250] = 0;
   out_8363446884750752161[251] = 0;
   out_8363446884750752161[252] = 0;
   out_8363446884750752161[253] = 0;
   out_8363446884750752161[254] = 0;
   out_8363446884750752161[255] = 0;
   out_8363446884750752161[256] = 0;
   out_8363446884750752161[257] = 0;
   out_8363446884750752161[258] = 0;
   out_8363446884750752161[259] = 0;
   out_8363446884750752161[260] = 0;
   out_8363446884750752161[261] = 0;
   out_8363446884750752161[262] = 0;
   out_8363446884750752161[263] = 0;
   out_8363446884750752161[264] = 1;
   out_8363446884750752161[265] = 0;
   out_8363446884750752161[266] = 0;
   out_8363446884750752161[267] = 0;
   out_8363446884750752161[268] = 0;
   out_8363446884750752161[269] = 0;
   out_8363446884750752161[270] = 0;
   out_8363446884750752161[271] = 0;
   out_8363446884750752161[272] = 0;
   out_8363446884750752161[273] = 0;
   out_8363446884750752161[274] = 0;
   out_8363446884750752161[275] = 0;
   out_8363446884750752161[276] = 0;
   out_8363446884750752161[277] = 0;
   out_8363446884750752161[278] = 0;
   out_8363446884750752161[279] = 0;
   out_8363446884750752161[280] = 0;
   out_8363446884750752161[281] = 0;
   out_8363446884750752161[282] = 0;
   out_8363446884750752161[283] = 0;
   out_8363446884750752161[284] = 0;
   out_8363446884750752161[285] = 0;
   out_8363446884750752161[286] = 1;
   out_8363446884750752161[287] = 0;
   out_8363446884750752161[288] = 0;
   out_8363446884750752161[289] = 0;
   out_8363446884750752161[290] = 0;
   out_8363446884750752161[291] = 0;
   out_8363446884750752161[292] = 0;
   out_8363446884750752161[293] = 0;
   out_8363446884750752161[294] = 0;
   out_8363446884750752161[295] = 0;
   out_8363446884750752161[296] = 0;
   out_8363446884750752161[297] = 0;
   out_8363446884750752161[298] = 0;
   out_8363446884750752161[299] = 0;
   out_8363446884750752161[300] = 0;
   out_8363446884750752161[301] = 0;
   out_8363446884750752161[302] = 0;
   out_8363446884750752161[303] = 0;
   out_8363446884750752161[304] = 0;
   out_8363446884750752161[305] = 0;
   out_8363446884750752161[306] = 0;
   out_8363446884750752161[307] = 0;
   out_8363446884750752161[308] = 1;
   out_8363446884750752161[309] = 0;
   out_8363446884750752161[310] = 0;
   out_8363446884750752161[311] = 0;
   out_8363446884750752161[312] = 0;
   out_8363446884750752161[313] = 0;
   out_8363446884750752161[314] = 0;
   out_8363446884750752161[315] = 0;
   out_8363446884750752161[316] = 0;
   out_8363446884750752161[317] = 0;
   out_8363446884750752161[318] = 0;
   out_8363446884750752161[319] = 0;
   out_8363446884750752161[320] = 0;
   out_8363446884750752161[321] = 0;
   out_8363446884750752161[322] = 0;
   out_8363446884750752161[323] = 0;
   out_8363446884750752161[324] = 0;
   out_8363446884750752161[325] = 0;
   out_8363446884750752161[326] = 0;
   out_8363446884750752161[327] = 0;
   out_8363446884750752161[328] = 0;
   out_8363446884750752161[329] = 0;
   out_8363446884750752161[330] = 1;
   out_8363446884750752161[331] = 0;
   out_8363446884750752161[332] = 0;
   out_8363446884750752161[333] = 0;
   out_8363446884750752161[334] = 0;
   out_8363446884750752161[335] = 0;
   out_8363446884750752161[336] = 0;
   out_8363446884750752161[337] = 0;
   out_8363446884750752161[338] = 0;
   out_8363446884750752161[339] = 0;
   out_8363446884750752161[340] = 0;
   out_8363446884750752161[341] = 0;
   out_8363446884750752161[342] = 0;
   out_8363446884750752161[343] = 0;
   out_8363446884750752161[344] = 0;
   out_8363446884750752161[345] = 0;
   out_8363446884750752161[346] = 0;
   out_8363446884750752161[347] = 0;
   out_8363446884750752161[348] = 0;
   out_8363446884750752161[349] = 0;
   out_8363446884750752161[350] = 0;
   out_8363446884750752161[351] = 0;
   out_8363446884750752161[352] = 1;
   out_8363446884750752161[353] = 0;
   out_8363446884750752161[354] = 0;
   out_8363446884750752161[355] = 0;
   out_8363446884750752161[356] = 0;
   out_8363446884750752161[357] = 0;
   out_8363446884750752161[358] = 0;
   out_8363446884750752161[359] = 0;
   out_8363446884750752161[360] = 0;
   out_8363446884750752161[361] = 0;
   out_8363446884750752161[362] = 0;
   out_8363446884750752161[363] = 0;
   out_8363446884750752161[364] = 0;
   out_8363446884750752161[365] = 0;
   out_8363446884750752161[366] = 0;
   out_8363446884750752161[367] = 0;
   out_8363446884750752161[368] = 0;
   out_8363446884750752161[369] = 0;
   out_8363446884750752161[370] = 0;
   out_8363446884750752161[371] = 0;
   out_8363446884750752161[372] = 0;
   out_8363446884750752161[373] = 0;
   out_8363446884750752161[374] = 1;
   out_8363446884750752161[375] = 0;
   out_8363446884750752161[376] = 0;
   out_8363446884750752161[377] = 0;
   out_8363446884750752161[378] = 0;
   out_8363446884750752161[379] = 0;
   out_8363446884750752161[380] = 0;
   out_8363446884750752161[381] = 0;
   out_8363446884750752161[382] = 0;
   out_8363446884750752161[383] = 0;
   out_8363446884750752161[384] = 0;
   out_8363446884750752161[385] = 0;
   out_8363446884750752161[386] = 0;
   out_8363446884750752161[387] = 0;
   out_8363446884750752161[388] = 0;
   out_8363446884750752161[389] = 0;
   out_8363446884750752161[390] = 0;
   out_8363446884750752161[391] = 0;
   out_8363446884750752161[392] = 0;
   out_8363446884750752161[393] = 0;
   out_8363446884750752161[394] = 0;
   out_8363446884750752161[395] = 0;
   out_8363446884750752161[396] = 1;
   out_8363446884750752161[397] = 0;
   out_8363446884750752161[398] = 0;
   out_8363446884750752161[399] = 0;
   out_8363446884750752161[400] = 0;
   out_8363446884750752161[401] = 0;
   out_8363446884750752161[402] = 0;
   out_8363446884750752161[403] = 0;
   out_8363446884750752161[404] = 0;
   out_8363446884750752161[405] = 0;
   out_8363446884750752161[406] = 0;
   out_8363446884750752161[407] = 0;
   out_8363446884750752161[408] = 0;
   out_8363446884750752161[409] = 0;
   out_8363446884750752161[410] = 0;
   out_8363446884750752161[411] = 0;
   out_8363446884750752161[412] = 0;
   out_8363446884750752161[413] = 0;
   out_8363446884750752161[414] = 0;
   out_8363446884750752161[415] = 0;
   out_8363446884750752161[416] = 0;
   out_8363446884750752161[417] = 0;
   out_8363446884750752161[418] = 1;
   out_8363446884750752161[419] = 0;
   out_8363446884750752161[420] = 0;
   out_8363446884750752161[421] = 0;
   out_8363446884750752161[422] = 0;
   out_8363446884750752161[423] = 0;
   out_8363446884750752161[424] = 0;
   out_8363446884750752161[425] = 0;
   out_8363446884750752161[426] = 0;
   out_8363446884750752161[427] = 0;
   out_8363446884750752161[428] = 0;
   out_8363446884750752161[429] = 0;
   out_8363446884750752161[430] = 0;
   out_8363446884750752161[431] = 0;
   out_8363446884750752161[432] = 0;
   out_8363446884750752161[433] = 0;
   out_8363446884750752161[434] = 0;
   out_8363446884750752161[435] = 0;
   out_8363446884750752161[436] = 0;
   out_8363446884750752161[437] = 0;
   out_8363446884750752161[438] = 0;
   out_8363446884750752161[439] = 0;
   out_8363446884750752161[440] = 1;
}
void h_4(double *state, double *unused, double *out_1041271705608517819) {
   out_1041271705608517819[0] = state[10] + state[13];
   out_1041271705608517819[1] = state[11] + state[14];
   out_1041271705608517819[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_836312682658128159) {
   out_836312682658128159[0] = 0;
   out_836312682658128159[1] = 0;
   out_836312682658128159[2] = 0;
   out_836312682658128159[3] = 0;
   out_836312682658128159[4] = 0;
   out_836312682658128159[5] = 0;
   out_836312682658128159[6] = 0;
   out_836312682658128159[7] = 0;
   out_836312682658128159[8] = 0;
   out_836312682658128159[9] = 0;
   out_836312682658128159[10] = 1;
   out_836312682658128159[11] = 0;
   out_836312682658128159[12] = 0;
   out_836312682658128159[13] = 1;
   out_836312682658128159[14] = 0;
   out_836312682658128159[15] = 0;
   out_836312682658128159[16] = 0;
   out_836312682658128159[17] = 0;
   out_836312682658128159[18] = 0;
   out_836312682658128159[19] = 0;
   out_836312682658128159[20] = 0;
   out_836312682658128159[21] = 0;
   out_836312682658128159[22] = 0;
   out_836312682658128159[23] = 0;
   out_836312682658128159[24] = 0;
   out_836312682658128159[25] = 0;
   out_836312682658128159[26] = 0;
   out_836312682658128159[27] = 0;
   out_836312682658128159[28] = 0;
   out_836312682658128159[29] = 0;
   out_836312682658128159[30] = 0;
   out_836312682658128159[31] = 0;
   out_836312682658128159[32] = 0;
   out_836312682658128159[33] = 1;
   out_836312682658128159[34] = 0;
   out_836312682658128159[35] = 0;
   out_836312682658128159[36] = 1;
   out_836312682658128159[37] = 0;
   out_836312682658128159[38] = 0;
   out_836312682658128159[39] = 0;
   out_836312682658128159[40] = 0;
   out_836312682658128159[41] = 0;
   out_836312682658128159[42] = 0;
   out_836312682658128159[43] = 0;
   out_836312682658128159[44] = 0;
   out_836312682658128159[45] = 0;
   out_836312682658128159[46] = 0;
   out_836312682658128159[47] = 0;
   out_836312682658128159[48] = 0;
   out_836312682658128159[49] = 0;
   out_836312682658128159[50] = 0;
   out_836312682658128159[51] = 0;
   out_836312682658128159[52] = 0;
   out_836312682658128159[53] = 0;
   out_836312682658128159[54] = 0;
   out_836312682658128159[55] = 0;
   out_836312682658128159[56] = 1;
   out_836312682658128159[57] = 0;
   out_836312682658128159[58] = 0;
   out_836312682658128159[59] = 1;
   out_836312682658128159[60] = 0;
   out_836312682658128159[61] = 0;
   out_836312682658128159[62] = 0;
   out_836312682658128159[63] = 0;
   out_836312682658128159[64] = 0;
   out_836312682658128159[65] = 0;
}
void h_9(double *state, double *unused, double *out_6978894764831227922) {
   out_6978894764831227922[0] = state[10];
   out_6978894764831227922[1] = state[11];
   out_6978894764831227922[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8123531617922575629) {
   out_8123531617922575629[0] = 0;
   out_8123531617922575629[1] = 0;
   out_8123531617922575629[2] = 0;
   out_8123531617922575629[3] = 0;
   out_8123531617922575629[4] = 0;
   out_8123531617922575629[5] = 0;
   out_8123531617922575629[6] = 0;
   out_8123531617922575629[7] = 0;
   out_8123531617922575629[8] = 0;
   out_8123531617922575629[9] = 0;
   out_8123531617922575629[10] = 1;
   out_8123531617922575629[11] = 0;
   out_8123531617922575629[12] = 0;
   out_8123531617922575629[13] = 0;
   out_8123531617922575629[14] = 0;
   out_8123531617922575629[15] = 0;
   out_8123531617922575629[16] = 0;
   out_8123531617922575629[17] = 0;
   out_8123531617922575629[18] = 0;
   out_8123531617922575629[19] = 0;
   out_8123531617922575629[20] = 0;
   out_8123531617922575629[21] = 0;
   out_8123531617922575629[22] = 0;
   out_8123531617922575629[23] = 0;
   out_8123531617922575629[24] = 0;
   out_8123531617922575629[25] = 0;
   out_8123531617922575629[26] = 0;
   out_8123531617922575629[27] = 0;
   out_8123531617922575629[28] = 0;
   out_8123531617922575629[29] = 0;
   out_8123531617922575629[30] = 0;
   out_8123531617922575629[31] = 0;
   out_8123531617922575629[32] = 0;
   out_8123531617922575629[33] = 1;
   out_8123531617922575629[34] = 0;
   out_8123531617922575629[35] = 0;
   out_8123531617922575629[36] = 0;
   out_8123531617922575629[37] = 0;
   out_8123531617922575629[38] = 0;
   out_8123531617922575629[39] = 0;
   out_8123531617922575629[40] = 0;
   out_8123531617922575629[41] = 0;
   out_8123531617922575629[42] = 0;
   out_8123531617922575629[43] = 0;
   out_8123531617922575629[44] = 0;
   out_8123531617922575629[45] = 0;
   out_8123531617922575629[46] = 0;
   out_8123531617922575629[47] = 0;
   out_8123531617922575629[48] = 0;
   out_8123531617922575629[49] = 0;
   out_8123531617922575629[50] = 0;
   out_8123531617922575629[51] = 0;
   out_8123531617922575629[52] = 0;
   out_8123531617922575629[53] = 0;
   out_8123531617922575629[54] = 0;
   out_8123531617922575629[55] = 0;
   out_8123531617922575629[56] = 1;
   out_8123531617922575629[57] = 0;
   out_8123531617922575629[58] = 0;
   out_8123531617922575629[59] = 0;
   out_8123531617922575629[60] = 0;
   out_8123531617922575629[61] = 0;
   out_8123531617922575629[62] = 0;
   out_8123531617922575629[63] = 0;
   out_8123531617922575629[64] = 0;
   out_8123531617922575629[65] = 0;
}
void h_10(double *state, double *unused, double *out_8669447785041758723) {
   out_8669447785041758723[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8669447785041758723[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8669447785041758723[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2890494636352708251) {
   out_2890494636352708251[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2890494636352708251[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2890494636352708251[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2890494636352708251[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2890494636352708251[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2890494636352708251[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2890494636352708251[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2890494636352708251[7] = 0;
   out_2890494636352708251[8] = 0;
   out_2890494636352708251[9] = 0;
   out_2890494636352708251[10] = 0;
   out_2890494636352708251[11] = 0;
   out_2890494636352708251[12] = 0;
   out_2890494636352708251[13] = 0;
   out_2890494636352708251[14] = 0;
   out_2890494636352708251[15] = 0;
   out_2890494636352708251[16] = 1;
   out_2890494636352708251[17] = 0;
   out_2890494636352708251[18] = 0;
   out_2890494636352708251[19] = 1;
   out_2890494636352708251[20] = 0;
   out_2890494636352708251[21] = 0;
   out_2890494636352708251[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2890494636352708251[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2890494636352708251[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2890494636352708251[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2890494636352708251[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2890494636352708251[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2890494636352708251[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2890494636352708251[29] = 0;
   out_2890494636352708251[30] = 0;
   out_2890494636352708251[31] = 0;
   out_2890494636352708251[32] = 0;
   out_2890494636352708251[33] = 0;
   out_2890494636352708251[34] = 0;
   out_2890494636352708251[35] = 0;
   out_2890494636352708251[36] = 0;
   out_2890494636352708251[37] = 0;
   out_2890494636352708251[38] = 0;
   out_2890494636352708251[39] = 1;
   out_2890494636352708251[40] = 0;
   out_2890494636352708251[41] = 0;
   out_2890494636352708251[42] = 1;
   out_2890494636352708251[43] = 0;
   out_2890494636352708251[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2890494636352708251[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2890494636352708251[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2890494636352708251[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2890494636352708251[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2890494636352708251[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2890494636352708251[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2890494636352708251[51] = 0;
   out_2890494636352708251[52] = 0;
   out_2890494636352708251[53] = 0;
   out_2890494636352708251[54] = 0;
   out_2890494636352708251[55] = 0;
   out_2890494636352708251[56] = 0;
   out_2890494636352708251[57] = 0;
   out_2890494636352708251[58] = 0;
   out_2890494636352708251[59] = 0;
   out_2890494636352708251[60] = 0;
   out_2890494636352708251[61] = 0;
   out_2890494636352708251[62] = 1;
   out_2890494636352708251[63] = 0;
   out_2890494636352708251[64] = 0;
   out_2890494636352708251[65] = 1;
}
void h_12(double *state, double *unused, double *out_117476402947836119) {
   out_117476402947836119[0] = state[0];
   out_117476402947836119[1] = state[1];
   out_117476402947836119[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8503440996340578651) {
   out_8503440996340578651[0] = 1;
   out_8503440996340578651[1] = 0;
   out_8503440996340578651[2] = 0;
   out_8503440996340578651[3] = 0;
   out_8503440996340578651[4] = 0;
   out_8503440996340578651[5] = 0;
   out_8503440996340578651[6] = 0;
   out_8503440996340578651[7] = 0;
   out_8503440996340578651[8] = 0;
   out_8503440996340578651[9] = 0;
   out_8503440996340578651[10] = 0;
   out_8503440996340578651[11] = 0;
   out_8503440996340578651[12] = 0;
   out_8503440996340578651[13] = 0;
   out_8503440996340578651[14] = 0;
   out_8503440996340578651[15] = 0;
   out_8503440996340578651[16] = 0;
   out_8503440996340578651[17] = 0;
   out_8503440996340578651[18] = 0;
   out_8503440996340578651[19] = 0;
   out_8503440996340578651[20] = 0;
   out_8503440996340578651[21] = 0;
   out_8503440996340578651[22] = 0;
   out_8503440996340578651[23] = 1;
   out_8503440996340578651[24] = 0;
   out_8503440996340578651[25] = 0;
   out_8503440996340578651[26] = 0;
   out_8503440996340578651[27] = 0;
   out_8503440996340578651[28] = 0;
   out_8503440996340578651[29] = 0;
   out_8503440996340578651[30] = 0;
   out_8503440996340578651[31] = 0;
   out_8503440996340578651[32] = 0;
   out_8503440996340578651[33] = 0;
   out_8503440996340578651[34] = 0;
   out_8503440996340578651[35] = 0;
   out_8503440996340578651[36] = 0;
   out_8503440996340578651[37] = 0;
   out_8503440996340578651[38] = 0;
   out_8503440996340578651[39] = 0;
   out_8503440996340578651[40] = 0;
   out_8503440996340578651[41] = 0;
   out_8503440996340578651[42] = 0;
   out_8503440996340578651[43] = 0;
   out_8503440996340578651[44] = 0;
   out_8503440996340578651[45] = 0;
   out_8503440996340578651[46] = 1;
   out_8503440996340578651[47] = 0;
   out_8503440996340578651[48] = 0;
   out_8503440996340578651[49] = 0;
   out_8503440996340578651[50] = 0;
   out_8503440996340578651[51] = 0;
   out_8503440996340578651[52] = 0;
   out_8503440996340578651[53] = 0;
   out_8503440996340578651[54] = 0;
   out_8503440996340578651[55] = 0;
   out_8503440996340578651[56] = 0;
   out_8503440996340578651[57] = 0;
   out_8503440996340578651[58] = 0;
   out_8503440996340578651[59] = 0;
   out_8503440996340578651[60] = 0;
   out_8503440996340578651[61] = 0;
   out_8503440996340578651[62] = 0;
   out_8503440996340578651[63] = 0;
   out_8503440996340578651[64] = 0;
   out_8503440996340578651[65] = 0;
}
void h_35(double *state, double *unused, double *out_3254898062564875699) {
   out_3254898062564875699[0] = state[7];
   out_3254898062564875699[1] = state[8];
   out_3254898062564875699[2] = state[9];
}
void H_35(double *state, double *unused, double *out_7197740045043959256) {
   out_7197740045043959256[0] = 0;
   out_7197740045043959256[1] = 0;
   out_7197740045043959256[2] = 0;
   out_7197740045043959256[3] = 0;
   out_7197740045043959256[4] = 0;
   out_7197740045043959256[5] = 0;
   out_7197740045043959256[6] = 0;
   out_7197740045043959256[7] = 1;
   out_7197740045043959256[8] = 0;
   out_7197740045043959256[9] = 0;
   out_7197740045043959256[10] = 0;
   out_7197740045043959256[11] = 0;
   out_7197740045043959256[12] = 0;
   out_7197740045043959256[13] = 0;
   out_7197740045043959256[14] = 0;
   out_7197740045043959256[15] = 0;
   out_7197740045043959256[16] = 0;
   out_7197740045043959256[17] = 0;
   out_7197740045043959256[18] = 0;
   out_7197740045043959256[19] = 0;
   out_7197740045043959256[20] = 0;
   out_7197740045043959256[21] = 0;
   out_7197740045043959256[22] = 0;
   out_7197740045043959256[23] = 0;
   out_7197740045043959256[24] = 0;
   out_7197740045043959256[25] = 0;
   out_7197740045043959256[26] = 0;
   out_7197740045043959256[27] = 0;
   out_7197740045043959256[28] = 0;
   out_7197740045043959256[29] = 0;
   out_7197740045043959256[30] = 1;
   out_7197740045043959256[31] = 0;
   out_7197740045043959256[32] = 0;
   out_7197740045043959256[33] = 0;
   out_7197740045043959256[34] = 0;
   out_7197740045043959256[35] = 0;
   out_7197740045043959256[36] = 0;
   out_7197740045043959256[37] = 0;
   out_7197740045043959256[38] = 0;
   out_7197740045043959256[39] = 0;
   out_7197740045043959256[40] = 0;
   out_7197740045043959256[41] = 0;
   out_7197740045043959256[42] = 0;
   out_7197740045043959256[43] = 0;
   out_7197740045043959256[44] = 0;
   out_7197740045043959256[45] = 0;
   out_7197740045043959256[46] = 0;
   out_7197740045043959256[47] = 0;
   out_7197740045043959256[48] = 0;
   out_7197740045043959256[49] = 0;
   out_7197740045043959256[50] = 0;
   out_7197740045043959256[51] = 0;
   out_7197740045043959256[52] = 0;
   out_7197740045043959256[53] = 1;
   out_7197740045043959256[54] = 0;
   out_7197740045043959256[55] = 0;
   out_7197740045043959256[56] = 0;
   out_7197740045043959256[57] = 0;
   out_7197740045043959256[58] = 0;
   out_7197740045043959256[59] = 0;
   out_7197740045043959256[60] = 0;
   out_7197740045043959256[61] = 0;
   out_7197740045043959256[62] = 0;
   out_7197740045043959256[63] = 0;
   out_7197740045043959256[64] = 0;
   out_7197740045043959256[65] = 0;
}
void h_32(double *state, double *unused, double *out_374327625260950500) {
   out_374327625260950500[0] = state[3];
   out_374327625260950500[1] = state[4];
   out_374327625260950500[2] = state[5];
   out_374327625260950500[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4414081880625541663) {
   out_4414081880625541663[0] = 0;
   out_4414081880625541663[1] = 0;
   out_4414081880625541663[2] = 0;
   out_4414081880625541663[3] = 1;
   out_4414081880625541663[4] = 0;
   out_4414081880625541663[5] = 0;
   out_4414081880625541663[6] = 0;
   out_4414081880625541663[7] = 0;
   out_4414081880625541663[8] = 0;
   out_4414081880625541663[9] = 0;
   out_4414081880625541663[10] = 0;
   out_4414081880625541663[11] = 0;
   out_4414081880625541663[12] = 0;
   out_4414081880625541663[13] = 0;
   out_4414081880625541663[14] = 0;
   out_4414081880625541663[15] = 0;
   out_4414081880625541663[16] = 0;
   out_4414081880625541663[17] = 0;
   out_4414081880625541663[18] = 0;
   out_4414081880625541663[19] = 0;
   out_4414081880625541663[20] = 0;
   out_4414081880625541663[21] = 0;
   out_4414081880625541663[22] = 0;
   out_4414081880625541663[23] = 0;
   out_4414081880625541663[24] = 0;
   out_4414081880625541663[25] = 0;
   out_4414081880625541663[26] = 1;
   out_4414081880625541663[27] = 0;
   out_4414081880625541663[28] = 0;
   out_4414081880625541663[29] = 0;
   out_4414081880625541663[30] = 0;
   out_4414081880625541663[31] = 0;
   out_4414081880625541663[32] = 0;
   out_4414081880625541663[33] = 0;
   out_4414081880625541663[34] = 0;
   out_4414081880625541663[35] = 0;
   out_4414081880625541663[36] = 0;
   out_4414081880625541663[37] = 0;
   out_4414081880625541663[38] = 0;
   out_4414081880625541663[39] = 0;
   out_4414081880625541663[40] = 0;
   out_4414081880625541663[41] = 0;
   out_4414081880625541663[42] = 0;
   out_4414081880625541663[43] = 0;
   out_4414081880625541663[44] = 0;
   out_4414081880625541663[45] = 0;
   out_4414081880625541663[46] = 0;
   out_4414081880625541663[47] = 0;
   out_4414081880625541663[48] = 0;
   out_4414081880625541663[49] = 1;
   out_4414081880625541663[50] = 0;
   out_4414081880625541663[51] = 0;
   out_4414081880625541663[52] = 0;
   out_4414081880625541663[53] = 0;
   out_4414081880625541663[54] = 0;
   out_4414081880625541663[55] = 0;
   out_4414081880625541663[56] = 0;
   out_4414081880625541663[57] = 0;
   out_4414081880625541663[58] = 0;
   out_4414081880625541663[59] = 0;
   out_4414081880625541663[60] = 0;
   out_4414081880625541663[61] = 0;
   out_4414081880625541663[62] = 0;
   out_4414081880625541663[63] = 0;
   out_4414081880625541663[64] = 0;
   out_4414081880625541663[65] = 0;
   out_4414081880625541663[66] = 0;
   out_4414081880625541663[67] = 0;
   out_4414081880625541663[68] = 0;
   out_4414081880625541663[69] = 0;
   out_4414081880625541663[70] = 0;
   out_4414081880625541663[71] = 0;
   out_4414081880625541663[72] = 1;
   out_4414081880625541663[73] = 0;
   out_4414081880625541663[74] = 0;
   out_4414081880625541663[75] = 0;
   out_4414081880625541663[76] = 0;
   out_4414081880625541663[77] = 0;
   out_4414081880625541663[78] = 0;
   out_4414081880625541663[79] = 0;
   out_4414081880625541663[80] = 0;
   out_4414081880625541663[81] = 0;
   out_4414081880625541663[82] = 0;
   out_4414081880625541663[83] = 0;
   out_4414081880625541663[84] = 0;
   out_4414081880625541663[85] = 0;
   out_4414081880625541663[86] = 0;
   out_4414081880625541663[87] = 0;
}
void h_13(double *state, double *unused, double *out_7213944346996647805) {
   out_7213944346996647805[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7213944346996647805[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7213944346996647805[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8154555791718865638) {
   out_8154555791718865638[0] = 0;
   out_8154555791718865638[1] = 0;
   out_8154555791718865638[2] = 0;
   out_8154555791718865638[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8154555791718865638[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8154555791718865638[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8154555791718865638[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8154555791718865638[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8154555791718865638[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8154555791718865638[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8154555791718865638[10] = 0;
   out_8154555791718865638[11] = 0;
   out_8154555791718865638[12] = 0;
   out_8154555791718865638[13] = 0;
   out_8154555791718865638[14] = 0;
   out_8154555791718865638[15] = 0;
   out_8154555791718865638[16] = 0;
   out_8154555791718865638[17] = 0;
   out_8154555791718865638[18] = 0;
   out_8154555791718865638[19] = 0;
   out_8154555791718865638[20] = 0;
   out_8154555791718865638[21] = 0;
   out_8154555791718865638[22] = 0;
   out_8154555791718865638[23] = 0;
   out_8154555791718865638[24] = 0;
   out_8154555791718865638[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8154555791718865638[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8154555791718865638[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8154555791718865638[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8154555791718865638[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8154555791718865638[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8154555791718865638[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8154555791718865638[32] = 0;
   out_8154555791718865638[33] = 0;
   out_8154555791718865638[34] = 0;
   out_8154555791718865638[35] = 0;
   out_8154555791718865638[36] = 0;
   out_8154555791718865638[37] = 0;
   out_8154555791718865638[38] = 0;
   out_8154555791718865638[39] = 0;
   out_8154555791718865638[40] = 0;
   out_8154555791718865638[41] = 0;
   out_8154555791718865638[42] = 0;
   out_8154555791718865638[43] = 0;
   out_8154555791718865638[44] = 0;
   out_8154555791718865638[45] = 0;
   out_8154555791718865638[46] = 0;
   out_8154555791718865638[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8154555791718865638[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8154555791718865638[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8154555791718865638[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8154555791718865638[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8154555791718865638[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8154555791718865638[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8154555791718865638[54] = 0;
   out_8154555791718865638[55] = 0;
   out_8154555791718865638[56] = 0;
   out_8154555791718865638[57] = 0;
   out_8154555791718865638[58] = 0;
   out_8154555791718865638[59] = 0;
   out_8154555791718865638[60] = 0;
   out_8154555791718865638[61] = 0;
   out_8154555791718865638[62] = 0;
   out_8154555791718865638[63] = 0;
   out_8154555791718865638[64] = 0;
   out_8154555791718865638[65] = 0;
}
void h_14(double *state, double *unused, double *out_6978894764831227922) {
   out_6978894764831227922[0] = state[10];
   out_6978894764831227922[1] = state[11];
   out_6978894764831227922[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8123531617922575629) {
   out_8123531617922575629[0] = 0;
   out_8123531617922575629[1] = 0;
   out_8123531617922575629[2] = 0;
   out_8123531617922575629[3] = 0;
   out_8123531617922575629[4] = 0;
   out_8123531617922575629[5] = 0;
   out_8123531617922575629[6] = 0;
   out_8123531617922575629[7] = 0;
   out_8123531617922575629[8] = 0;
   out_8123531617922575629[9] = 0;
   out_8123531617922575629[10] = 1;
   out_8123531617922575629[11] = 0;
   out_8123531617922575629[12] = 0;
   out_8123531617922575629[13] = 0;
   out_8123531617922575629[14] = 0;
   out_8123531617922575629[15] = 0;
   out_8123531617922575629[16] = 0;
   out_8123531617922575629[17] = 0;
   out_8123531617922575629[18] = 0;
   out_8123531617922575629[19] = 0;
   out_8123531617922575629[20] = 0;
   out_8123531617922575629[21] = 0;
   out_8123531617922575629[22] = 0;
   out_8123531617922575629[23] = 0;
   out_8123531617922575629[24] = 0;
   out_8123531617922575629[25] = 0;
   out_8123531617922575629[26] = 0;
   out_8123531617922575629[27] = 0;
   out_8123531617922575629[28] = 0;
   out_8123531617922575629[29] = 0;
   out_8123531617922575629[30] = 0;
   out_8123531617922575629[31] = 0;
   out_8123531617922575629[32] = 0;
   out_8123531617922575629[33] = 1;
   out_8123531617922575629[34] = 0;
   out_8123531617922575629[35] = 0;
   out_8123531617922575629[36] = 0;
   out_8123531617922575629[37] = 0;
   out_8123531617922575629[38] = 0;
   out_8123531617922575629[39] = 0;
   out_8123531617922575629[40] = 0;
   out_8123531617922575629[41] = 0;
   out_8123531617922575629[42] = 0;
   out_8123531617922575629[43] = 0;
   out_8123531617922575629[44] = 0;
   out_8123531617922575629[45] = 0;
   out_8123531617922575629[46] = 0;
   out_8123531617922575629[47] = 0;
   out_8123531617922575629[48] = 0;
   out_8123531617922575629[49] = 0;
   out_8123531617922575629[50] = 0;
   out_8123531617922575629[51] = 0;
   out_8123531617922575629[52] = 0;
   out_8123531617922575629[53] = 0;
   out_8123531617922575629[54] = 0;
   out_8123531617922575629[55] = 0;
   out_8123531617922575629[56] = 1;
   out_8123531617922575629[57] = 0;
   out_8123531617922575629[58] = 0;
   out_8123531617922575629[59] = 0;
   out_8123531617922575629[60] = 0;
   out_8123531617922575629[61] = 0;
   out_8123531617922575629[62] = 0;
   out_8123531617922575629[63] = 0;
   out_8123531617922575629[64] = 0;
   out_8123531617922575629[65] = 0;
}
void h_33(double *state, double *unused, double *out_7792370730077755811) {
   out_7792370730077755811[0] = state[16];
   out_7792370730077755811[1] = state[17];
   out_7792370730077755811[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4047183040405101652) {
   out_4047183040405101652[0] = 0;
   out_4047183040405101652[1] = 0;
   out_4047183040405101652[2] = 0;
   out_4047183040405101652[3] = 0;
   out_4047183040405101652[4] = 0;
   out_4047183040405101652[5] = 0;
   out_4047183040405101652[6] = 0;
   out_4047183040405101652[7] = 0;
   out_4047183040405101652[8] = 0;
   out_4047183040405101652[9] = 0;
   out_4047183040405101652[10] = 0;
   out_4047183040405101652[11] = 0;
   out_4047183040405101652[12] = 0;
   out_4047183040405101652[13] = 0;
   out_4047183040405101652[14] = 0;
   out_4047183040405101652[15] = 0;
   out_4047183040405101652[16] = 1;
   out_4047183040405101652[17] = 0;
   out_4047183040405101652[18] = 0;
   out_4047183040405101652[19] = 0;
   out_4047183040405101652[20] = 0;
   out_4047183040405101652[21] = 0;
   out_4047183040405101652[22] = 0;
   out_4047183040405101652[23] = 0;
   out_4047183040405101652[24] = 0;
   out_4047183040405101652[25] = 0;
   out_4047183040405101652[26] = 0;
   out_4047183040405101652[27] = 0;
   out_4047183040405101652[28] = 0;
   out_4047183040405101652[29] = 0;
   out_4047183040405101652[30] = 0;
   out_4047183040405101652[31] = 0;
   out_4047183040405101652[32] = 0;
   out_4047183040405101652[33] = 0;
   out_4047183040405101652[34] = 0;
   out_4047183040405101652[35] = 0;
   out_4047183040405101652[36] = 0;
   out_4047183040405101652[37] = 0;
   out_4047183040405101652[38] = 0;
   out_4047183040405101652[39] = 1;
   out_4047183040405101652[40] = 0;
   out_4047183040405101652[41] = 0;
   out_4047183040405101652[42] = 0;
   out_4047183040405101652[43] = 0;
   out_4047183040405101652[44] = 0;
   out_4047183040405101652[45] = 0;
   out_4047183040405101652[46] = 0;
   out_4047183040405101652[47] = 0;
   out_4047183040405101652[48] = 0;
   out_4047183040405101652[49] = 0;
   out_4047183040405101652[50] = 0;
   out_4047183040405101652[51] = 0;
   out_4047183040405101652[52] = 0;
   out_4047183040405101652[53] = 0;
   out_4047183040405101652[54] = 0;
   out_4047183040405101652[55] = 0;
   out_4047183040405101652[56] = 0;
   out_4047183040405101652[57] = 0;
   out_4047183040405101652[58] = 0;
   out_4047183040405101652[59] = 0;
   out_4047183040405101652[60] = 0;
   out_4047183040405101652[61] = 0;
   out_4047183040405101652[62] = 1;
   out_4047183040405101652[63] = 0;
   out_4047183040405101652[64] = 0;
   out_4047183040405101652[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_742148225835129227) {
  H(in_vec, out_742148225835129227);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4932625361128218531) {
  err_fun(nom_x, delta_x, out_4932625361128218531);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5091719650809670856) {
  inv_err_fun(nom_x, true_x, out_5091719650809670856);
}
void live_H_mod_fun(double *state, double *out_1669533905452122654) {
  H_mod_fun(state, out_1669533905452122654);
}
void live_f_fun(double *state, double dt, double *out_452407580724599486) {
  f_fun(state,  dt, out_452407580724599486);
}
void live_F_fun(double *state, double dt, double *out_8363446884750752161) {
  F_fun(state,  dt, out_8363446884750752161);
}
void live_h_4(double *state, double *unused, double *out_1041271705608517819) {
  h_4(state, unused, out_1041271705608517819);
}
void live_H_4(double *state, double *unused, double *out_836312682658128159) {
  H_4(state, unused, out_836312682658128159);
}
void live_h_9(double *state, double *unused, double *out_6978894764831227922) {
  h_9(state, unused, out_6978894764831227922);
}
void live_H_9(double *state, double *unused, double *out_8123531617922575629) {
  H_9(state, unused, out_8123531617922575629);
}
void live_h_10(double *state, double *unused, double *out_8669447785041758723) {
  h_10(state, unused, out_8669447785041758723);
}
void live_H_10(double *state, double *unused, double *out_2890494636352708251) {
  H_10(state, unused, out_2890494636352708251);
}
void live_h_12(double *state, double *unused, double *out_117476402947836119) {
  h_12(state, unused, out_117476402947836119);
}
void live_H_12(double *state, double *unused, double *out_8503440996340578651) {
  H_12(state, unused, out_8503440996340578651);
}
void live_h_35(double *state, double *unused, double *out_3254898062564875699) {
  h_35(state, unused, out_3254898062564875699);
}
void live_H_35(double *state, double *unused, double *out_7197740045043959256) {
  H_35(state, unused, out_7197740045043959256);
}
void live_h_32(double *state, double *unused, double *out_374327625260950500) {
  h_32(state, unused, out_374327625260950500);
}
void live_H_32(double *state, double *unused, double *out_4414081880625541663) {
  H_32(state, unused, out_4414081880625541663);
}
void live_h_13(double *state, double *unused, double *out_7213944346996647805) {
  h_13(state, unused, out_7213944346996647805);
}
void live_H_13(double *state, double *unused, double *out_8154555791718865638) {
  H_13(state, unused, out_8154555791718865638);
}
void live_h_14(double *state, double *unused, double *out_6978894764831227922) {
  h_14(state, unused, out_6978894764831227922);
}
void live_H_14(double *state, double *unused, double *out_8123531617922575629) {
  H_14(state, unused, out_8123531617922575629);
}
void live_h_33(double *state, double *unused, double *out_7792370730077755811) {
  h_33(state, unused, out_7792370730077755811);
}
void live_H_33(double *state, double *unused, double *out_4047183040405101652) {
  H_33(state, unused, out_4047183040405101652);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
