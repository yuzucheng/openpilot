#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1345249788758015084) {
   out_1345249788758015084[0] = 0;
   out_1345249788758015084[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1345249788758015084[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1345249788758015084[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1345249788758015084[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1345249788758015084[5] = -sin(in_vec[1]);
   out_1345249788758015084[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1345249788758015084[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1345249788758015084[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1345249788758015084[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1345249788758015084[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1345249788758015084[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1345249788758015084[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1345249788758015084[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1345249788758015084[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1345249788758015084[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1345249788758015084[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1345249788758015084[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7719634259818376092) {
   out_7719634259818376092[0] = delta_x[0] + nom_x[0];
   out_7719634259818376092[1] = delta_x[1] + nom_x[1];
   out_7719634259818376092[2] = delta_x[2] + nom_x[2];
   out_7719634259818376092[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7719634259818376092[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7719634259818376092[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7719634259818376092[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7719634259818376092[7] = delta_x[6] + nom_x[7];
   out_7719634259818376092[8] = delta_x[7] + nom_x[8];
   out_7719634259818376092[9] = delta_x[8] + nom_x[9];
   out_7719634259818376092[10] = delta_x[9] + nom_x[10];
   out_7719634259818376092[11] = delta_x[10] + nom_x[11];
   out_7719634259818376092[12] = delta_x[11] + nom_x[12];
   out_7719634259818376092[13] = delta_x[12] + nom_x[13];
   out_7719634259818376092[14] = delta_x[13] + nom_x[14];
   out_7719634259818376092[15] = delta_x[14] + nom_x[15];
   out_7719634259818376092[16] = delta_x[15] + nom_x[16];
   out_7719634259818376092[17] = delta_x[16] + nom_x[17];
   out_7719634259818376092[18] = delta_x[17] + nom_x[18];
   out_7719634259818376092[19] = delta_x[18] + nom_x[19];
   out_7719634259818376092[20] = delta_x[19] + nom_x[20];
   out_7719634259818376092[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6741930509538719735) {
   out_6741930509538719735[0] = -nom_x[0] + true_x[0];
   out_6741930509538719735[1] = -nom_x[1] + true_x[1];
   out_6741930509538719735[2] = -nom_x[2] + true_x[2];
   out_6741930509538719735[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6741930509538719735[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6741930509538719735[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6741930509538719735[6] = -nom_x[7] + true_x[7];
   out_6741930509538719735[7] = -nom_x[8] + true_x[8];
   out_6741930509538719735[8] = -nom_x[9] + true_x[9];
   out_6741930509538719735[9] = -nom_x[10] + true_x[10];
   out_6741930509538719735[10] = -nom_x[11] + true_x[11];
   out_6741930509538719735[11] = -nom_x[12] + true_x[12];
   out_6741930509538719735[12] = -nom_x[13] + true_x[13];
   out_6741930509538719735[13] = -nom_x[14] + true_x[14];
   out_6741930509538719735[14] = -nom_x[15] + true_x[15];
   out_6741930509538719735[15] = -nom_x[16] + true_x[16];
   out_6741930509538719735[16] = -nom_x[17] + true_x[17];
   out_6741930509538719735[17] = -nom_x[18] + true_x[18];
   out_6741930509538719735[18] = -nom_x[19] + true_x[19];
   out_6741930509538719735[19] = -nom_x[20] + true_x[20];
   out_6741930509538719735[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2627288097967823166) {
   out_2627288097967823166[0] = 1.0;
   out_2627288097967823166[1] = 0;
   out_2627288097967823166[2] = 0;
   out_2627288097967823166[3] = 0;
   out_2627288097967823166[4] = 0;
   out_2627288097967823166[5] = 0;
   out_2627288097967823166[6] = 0;
   out_2627288097967823166[7] = 0;
   out_2627288097967823166[8] = 0;
   out_2627288097967823166[9] = 0;
   out_2627288097967823166[10] = 0;
   out_2627288097967823166[11] = 0;
   out_2627288097967823166[12] = 0;
   out_2627288097967823166[13] = 0;
   out_2627288097967823166[14] = 0;
   out_2627288097967823166[15] = 0;
   out_2627288097967823166[16] = 0;
   out_2627288097967823166[17] = 0;
   out_2627288097967823166[18] = 0;
   out_2627288097967823166[19] = 0;
   out_2627288097967823166[20] = 0;
   out_2627288097967823166[21] = 0;
   out_2627288097967823166[22] = 1.0;
   out_2627288097967823166[23] = 0;
   out_2627288097967823166[24] = 0;
   out_2627288097967823166[25] = 0;
   out_2627288097967823166[26] = 0;
   out_2627288097967823166[27] = 0;
   out_2627288097967823166[28] = 0;
   out_2627288097967823166[29] = 0;
   out_2627288097967823166[30] = 0;
   out_2627288097967823166[31] = 0;
   out_2627288097967823166[32] = 0;
   out_2627288097967823166[33] = 0;
   out_2627288097967823166[34] = 0;
   out_2627288097967823166[35] = 0;
   out_2627288097967823166[36] = 0;
   out_2627288097967823166[37] = 0;
   out_2627288097967823166[38] = 0;
   out_2627288097967823166[39] = 0;
   out_2627288097967823166[40] = 0;
   out_2627288097967823166[41] = 0;
   out_2627288097967823166[42] = 0;
   out_2627288097967823166[43] = 0;
   out_2627288097967823166[44] = 1.0;
   out_2627288097967823166[45] = 0;
   out_2627288097967823166[46] = 0;
   out_2627288097967823166[47] = 0;
   out_2627288097967823166[48] = 0;
   out_2627288097967823166[49] = 0;
   out_2627288097967823166[50] = 0;
   out_2627288097967823166[51] = 0;
   out_2627288097967823166[52] = 0;
   out_2627288097967823166[53] = 0;
   out_2627288097967823166[54] = 0;
   out_2627288097967823166[55] = 0;
   out_2627288097967823166[56] = 0;
   out_2627288097967823166[57] = 0;
   out_2627288097967823166[58] = 0;
   out_2627288097967823166[59] = 0;
   out_2627288097967823166[60] = 0;
   out_2627288097967823166[61] = 0;
   out_2627288097967823166[62] = 0;
   out_2627288097967823166[63] = 0;
   out_2627288097967823166[64] = 0;
   out_2627288097967823166[65] = 0;
   out_2627288097967823166[66] = -0.5*state[4];
   out_2627288097967823166[67] = -0.5*state[5];
   out_2627288097967823166[68] = -0.5*state[6];
   out_2627288097967823166[69] = 0;
   out_2627288097967823166[70] = 0;
   out_2627288097967823166[71] = 0;
   out_2627288097967823166[72] = 0;
   out_2627288097967823166[73] = 0;
   out_2627288097967823166[74] = 0;
   out_2627288097967823166[75] = 0;
   out_2627288097967823166[76] = 0;
   out_2627288097967823166[77] = 0;
   out_2627288097967823166[78] = 0;
   out_2627288097967823166[79] = 0;
   out_2627288097967823166[80] = 0;
   out_2627288097967823166[81] = 0;
   out_2627288097967823166[82] = 0;
   out_2627288097967823166[83] = 0;
   out_2627288097967823166[84] = 0;
   out_2627288097967823166[85] = 0;
   out_2627288097967823166[86] = 0;
   out_2627288097967823166[87] = 0.5*state[3];
   out_2627288097967823166[88] = 0.5*state[6];
   out_2627288097967823166[89] = -0.5*state[5];
   out_2627288097967823166[90] = 0;
   out_2627288097967823166[91] = 0;
   out_2627288097967823166[92] = 0;
   out_2627288097967823166[93] = 0;
   out_2627288097967823166[94] = 0;
   out_2627288097967823166[95] = 0;
   out_2627288097967823166[96] = 0;
   out_2627288097967823166[97] = 0;
   out_2627288097967823166[98] = 0;
   out_2627288097967823166[99] = 0;
   out_2627288097967823166[100] = 0;
   out_2627288097967823166[101] = 0;
   out_2627288097967823166[102] = 0;
   out_2627288097967823166[103] = 0;
   out_2627288097967823166[104] = 0;
   out_2627288097967823166[105] = 0;
   out_2627288097967823166[106] = 0;
   out_2627288097967823166[107] = 0;
   out_2627288097967823166[108] = -0.5*state[6];
   out_2627288097967823166[109] = 0.5*state[3];
   out_2627288097967823166[110] = 0.5*state[4];
   out_2627288097967823166[111] = 0;
   out_2627288097967823166[112] = 0;
   out_2627288097967823166[113] = 0;
   out_2627288097967823166[114] = 0;
   out_2627288097967823166[115] = 0;
   out_2627288097967823166[116] = 0;
   out_2627288097967823166[117] = 0;
   out_2627288097967823166[118] = 0;
   out_2627288097967823166[119] = 0;
   out_2627288097967823166[120] = 0;
   out_2627288097967823166[121] = 0;
   out_2627288097967823166[122] = 0;
   out_2627288097967823166[123] = 0;
   out_2627288097967823166[124] = 0;
   out_2627288097967823166[125] = 0;
   out_2627288097967823166[126] = 0;
   out_2627288097967823166[127] = 0;
   out_2627288097967823166[128] = 0;
   out_2627288097967823166[129] = 0.5*state[5];
   out_2627288097967823166[130] = -0.5*state[4];
   out_2627288097967823166[131] = 0.5*state[3];
   out_2627288097967823166[132] = 0;
   out_2627288097967823166[133] = 0;
   out_2627288097967823166[134] = 0;
   out_2627288097967823166[135] = 0;
   out_2627288097967823166[136] = 0;
   out_2627288097967823166[137] = 0;
   out_2627288097967823166[138] = 0;
   out_2627288097967823166[139] = 0;
   out_2627288097967823166[140] = 0;
   out_2627288097967823166[141] = 0;
   out_2627288097967823166[142] = 0;
   out_2627288097967823166[143] = 0;
   out_2627288097967823166[144] = 0;
   out_2627288097967823166[145] = 0;
   out_2627288097967823166[146] = 0;
   out_2627288097967823166[147] = 0;
   out_2627288097967823166[148] = 0;
   out_2627288097967823166[149] = 0;
   out_2627288097967823166[150] = 0;
   out_2627288097967823166[151] = 0;
   out_2627288097967823166[152] = 0;
   out_2627288097967823166[153] = 1.0;
   out_2627288097967823166[154] = 0;
   out_2627288097967823166[155] = 0;
   out_2627288097967823166[156] = 0;
   out_2627288097967823166[157] = 0;
   out_2627288097967823166[158] = 0;
   out_2627288097967823166[159] = 0;
   out_2627288097967823166[160] = 0;
   out_2627288097967823166[161] = 0;
   out_2627288097967823166[162] = 0;
   out_2627288097967823166[163] = 0;
   out_2627288097967823166[164] = 0;
   out_2627288097967823166[165] = 0;
   out_2627288097967823166[166] = 0;
   out_2627288097967823166[167] = 0;
   out_2627288097967823166[168] = 0;
   out_2627288097967823166[169] = 0;
   out_2627288097967823166[170] = 0;
   out_2627288097967823166[171] = 0;
   out_2627288097967823166[172] = 0;
   out_2627288097967823166[173] = 0;
   out_2627288097967823166[174] = 0;
   out_2627288097967823166[175] = 1.0;
   out_2627288097967823166[176] = 0;
   out_2627288097967823166[177] = 0;
   out_2627288097967823166[178] = 0;
   out_2627288097967823166[179] = 0;
   out_2627288097967823166[180] = 0;
   out_2627288097967823166[181] = 0;
   out_2627288097967823166[182] = 0;
   out_2627288097967823166[183] = 0;
   out_2627288097967823166[184] = 0;
   out_2627288097967823166[185] = 0;
   out_2627288097967823166[186] = 0;
   out_2627288097967823166[187] = 0;
   out_2627288097967823166[188] = 0;
   out_2627288097967823166[189] = 0;
   out_2627288097967823166[190] = 0;
   out_2627288097967823166[191] = 0;
   out_2627288097967823166[192] = 0;
   out_2627288097967823166[193] = 0;
   out_2627288097967823166[194] = 0;
   out_2627288097967823166[195] = 0;
   out_2627288097967823166[196] = 0;
   out_2627288097967823166[197] = 1.0;
   out_2627288097967823166[198] = 0;
   out_2627288097967823166[199] = 0;
   out_2627288097967823166[200] = 0;
   out_2627288097967823166[201] = 0;
   out_2627288097967823166[202] = 0;
   out_2627288097967823166[203] = 0;
   out_2627288097967823166[204] = 0;
   out_2627288097967823166[205] = 0;
   out_2627288097967823166[206] = 0;
   out_2627288097967823166[207] = 0;
   out_2627288097967823166[208] = 0;
   out_2627288097967823166[209] = 0;
   out_2627288097967823166[210] = 0;
   out_2627288097967823166[211] = 0;
   out_2627288097967823166[212] = 0;
   out_2627288097967823166[213] = 0;
   out_2627288097967823166[214] = 0;
   out_2627288097967823166[215] = 0;
   out_2627288097967823166[216] = 0;
   out_2627288097967823166[217] = 0;
   out_2627288097967823166[218] = 0;
   out_2627288097967823166[219] = 1.0;
   out_2627288097967823166[220] = 0;
   out_2627288097967823166[221] = 0;
   out_2627288097967823166[222] = 0;
   out_2627288097967823166[223] = 0;
   out_2627288097967823166[224] = 0;
   out_2627288097967823166[225] = 0;
   out_2627288097967823166[226] = 0;
   out_2627288097967823166[227] = 0;
   out_2627288097967823166[228] = 0;
   out_2627288097967823166[229] = 0;
   out_2627288097967823166[230] = 0;
   out_2627288097967823166[231] = 0;
   out_2627288097967823166[232] = 0;
   out_2627288097967823166[233] = 0;
   out_2627288097967823166[234] = 0;
   out_2627288097967823166[235] = 0;
   out_2627288097967823166[236] = 0;
   out_2627288097967823166[237] = 0;
   out_2627288097967823166[238] = 0;
   out_2627288097967823166[239] = 0;
   out_2627288097967823166[240] = 0;
   out_2627288097967823166[241] = 1.0;
   out_2627288097967823166[242] = 0;
   out_2627288097967823166[243] = 0;
   out_2627288097967823166[244] = 0;
   out_2627288097967823166[245] = 0;
   out_2627288097967823166[246] = 0;
   out_2627288097967823166[247] = 0;
   out_2627288097967823166[248] = 0;
   out_2627288097967823166[249] = 0;
   out_2627288097967823166[250] = 0;
   out_2627288097967823166[251] = 0;
   out_2627288097967823166[252] = 0;
   out_2627288097967823166[253] = 0;
   out_2627288097967823166[254] = 0;
   out_2627288097967823166[255] = 0;
   out_2627288097967823166[256] = 0;
   out_2627288097967823166[257] = 0;
   out_2627288097967823166[258] = 0;
   out_2627288097967823166[259] = 0;
   out_2627288097967823166[260] = 0;
   out_2627288097967823166[261] = 0;
   out_2627288097967823166[262] = 0;
   out_2627288097967823166[263] = 1.0;
   out_2627288097967823166[264] = 0;
   out_2627288097967823166[265] = 0;
   out_2627288097967823166[266] = 0;
   out_2627288097967823166[267] = 0;
   out_2627288097967823166[268] = 0;
   out_2627288097967823166[269] = 0;
   out_2627288097967823166[270] = 0;
   out_2627288097967823166[271] = 0;
   out_2627288097967823166[272] = 0;
   out_2627288097967823166[273] = 0;
   out_2627288097967823166[274] = 0;
   out_2627288097967823166[275] = 0;
   out_2627288097967823166[276] = 0;
   out_2627288097967823166[277] = 0;
   out_2627288097967823166[278] = 0;
   out_2627288097967823166[279] = 0;
   out_2627288097967823166[280] = 0;
   out_2627288097967823166[281] = 0;
   out_2627288097967823166[282] = 0;
   out_2627288097967823166[283] = 0;
   out_2627288097967823166[284] = 0;
   out_2627288097967823166[285] = 1.0;
   out_2627288097967823166[286] = 0;
   out_2627288097967823166[287] = 0;
   out_2627288097967823166[288] = 0;
   out_2627288097967823166[289] = 0;
   out_2627288097967823166[290] = 0;
   out_2627288097967823166[291] = 0;
   out_2627288097967823166[292] = 0;
   out_2627288097967823166[293] = 0;
   out_2627288097967823166[294] = 0;
   out_2627288097967823166[295] = 0;
   out_2627288097967823166[296] = 0;
   out_2627288097967823166[297] = 0;
   out_2627288097967823166[298] = 0;
   out_2627288097967823166[299] = 0;
   out_2627288097967823166[300] = 0;
   out_2627288097967823166[301] = 0;
   out_2627288097967823166[302] = 0;
   out_2627288097967823166[303] = 0;
   out_2627288097967823166[304] = 0;
   out_2627288097967823166[305] = 0;
   out_2627288097967823166[306] = 0;
   out_2627288097967823166[307] = 1.0;
   out_2627288097967823166[308] = 0;
   out_2627288097967823166[309] = 0;
   out_2627288097967823166[310] = 0;
   out_2627288097967823166[311] = 0;
   out_2627288097967823166[312] = 0;
   out_2627288097967823166[313] = 0;
   out_2627288097967823166[314] = 0;
   out_2627288097967823166[315] = 0;
   out_2627288097967823166[316] = 0;
   out_2627288097967823166[317] = 0;
   out_2627288097967823166[318] = 0;
   out_2627288097967823166[319] = 0;
   out_2627288097967823166[320] = 0;
   out_2627288097967823166[321] = 0;
   out_2627288097967823166[322] = 0;
   out_2627288097967823166[323] = 0;
   out_2627288097967823166[324] = 0;
   out_2627288097967823166[325] = 0;
   out_2627288097967823166[326] = 0;
   out_2627288097967823166[327] = 0;
   out_2627288097967823166[328] = 0;
   out_2627288097967823166[329] = 1.0;
   out_2627288097967823166[330] = 0;
   out_2627288097967823166[331] = 0;
   out_2627288097967823166[332] = 0;
   out_2627288097967823166[333] = 0;
   out_2627288097967823166[334] = 0;
   out_2627288097967823166[335] = 0;
   out_2627288097967823166[336] = 0;
   out_2627288097967823166[337] = 0;
   out_2627288097967823166[338] = 0;
   out_2627288097967823166[339] = 0;
   out_2627288097967823166[340] = 0;
   out_2627288097967823166[341] = 0;
   out_2627288097967823166[342] = 0;
   out_2627288097967823166[343] = 0;
   out_2627288097967823166[344] = 0;
   out_2627288097967823166[345] = 0;
   out_2627288097967823166[346] = 0;
   out_2627288097967823166[347] = 0;
   out_2627288097967823166[348] = 0;
   out_2627288097967823166[349] = 0;
   out_2627288097967823166[350] = 0;
   out_2627288097967823166[351] = 1.0;
   out_2627288097967823166[352] = 0;
   out_2627288097967823166[353] = 0;
   out_2627288097967823166[354] = 0;
   out_2627288097967823166[355] = 0;
   out_2627288097967823166[356] = 0;
   out_2627288097967823166[357] = 0;
   out_2627288097967823166[358] = 0;
   out_2627288097967823166[359] = 0;
   out_2627288097967823166[360] = 0;
   out_2627288097967823166[361] = 0;
   out_2627288097967823166[362] = 0;
   out_2627288097967823166[363] = 0;
   out_2627288097967823166[364] = 0;
   out_2627288097967823166[365] = 0;
   out_2627288097967823166[366] = 0;
   out_2627288097967823166[367] = 0;
   out_2627288097967823166[368] = 0;
   out_2627288097967823166[369] = 0;
   out_2627288097967823166[370] = 0;
   out_2627288097967823166[371] = 0;
   out_2627288097967823166[372] = 0;
   out_2627288097967823166[373] = 1.0;
   out_2627288097967823166[374] = 0;
   out_2627288097967823166[375] = 0;
   out_2627288097967823166[376] = 0;
   out_2627288097967823166[377] = 0;
   out_2627288097967823166[378] = 0;
   out_2627288097967823166[379] = 0;
   out_2627288097967823166[380] = 0;
   out_2627288097967823166[381] = 0;
   out_2627288097967823166[382] = 0;
   out_2627288097967823166[383] = 0;
   out_2627288097967823166[384] = 0;
   out_2627288097967823166[385] = 0;
   out_2627288097967823166[386] = 0;
   out_2627288097967823166[387] = 0;
   out_2627288097967823166[388] = 0;
   out_2627288097967823166[389] = 0;
   out_2627288097967823166[390] = 0;
   out_2627288097967823166[391] = 0;
   out_2627288097967823166[392] = 0;
   out_2627288097967823166[393] = 0;
   out_2627288097967823166[394] = 0;
   out_2627288097967823166[395] = 1.0;
   out_2627288097967823166[396] = 0;
   out_2627288097967823166[397] = 0;
   out_2627288097967823166[398] = 0;
   out_2627288097967823166[399] = 0;
   out_2627288097967823166[400] = 0;
   out_2627288097967823166[401] = 0;
   out_2627288097967823166[402] = 0;
   out_2627288097967823166[403] = 0;
   out_2627288097967823166[404] = 0;
   out_2627288097967823166[405] = 0;
   out_2627288097967823166[406] = 0;
   out_2627288097967823166[407] = 0;
   out_2627288097967823166[408] = 0;
   out_2627288097967823166[409] = 0;
   out_2627288097967823166[410] = 0;
   out_2627288097967823166[411] = 0;
   out_2627288097967823166[412] = 0;
   out_2627288097967823166[413] = 0;
   out_2627288097967823166[414] = 0;
   out_2627288097967823166[415] = 0;
   out_2627288097967823166[416] = 0;
   out_2627288097967823166[417] = 1.0;
   out_2627288097967823166[418] = 0;
   out_2627288097967823166[419] = 0;
   out_2627288097967823166[420] = 0;
   out_2627288097967823166[421] = 0;
   out_2627288097967823166[422] = 0;
   out_2627288097967823166[423] = 0;
   out_2627288097967823166[424] = 0;
   out_2627288097967823166[425] = 0;
   out_2627288097967823166[426] = 0;
   out_2627288097967823166[427] = 0;
   out_2627288097967823166[428] = 0;
   out_2627288097967823166[429] = 0;
   out_2627288097967823166[430] = 0;
   out_2627288097967823166[431] = 0;
   out_2627288097967823166[432] = 0;
   out_2627288097967823166[433] = 0;
   out_2627288097967823166[434] = 0;
   out_2627288097967823166[435] = 0;
   out_2627288097967823166[436] = 0;
   out_2627288097967823166[437] = 0;
   out_2627288097967823166[438] = 0;
   out_2627288097967823166[439] = 1.0;
   out_2627288097967823166[440] = 0;
   out_2627288097967823166[441] = 0;
   out_2627288097967823166[442] = 0;
   out_2627288097967823166[443] = 0;
   out_2627288097967823166[444] = 0;
   out_2627288097967823166[445] = 0;
   out_2627288097967823166[446] = 0;
   out_2627288097967823166[447] = 0;
   out_2627288097967823166[448] = 0;
   out_2627288097967823166[449] = 0;
   out_2627288097967823166[450] = 0;
   out_2627288097967823166[451] = 0;
   out_2627288097967823166[452] = 0;
   out_2627288097967823166[453] = 0;
   out_2627288097967823166[454] = 0;
   out_2627288097967823166[455] = 0;
   out_2627288097967823166[456] = 0;
   out_2627288097967823166[457] = 0;
   out_2627288097967823166[458] = 0;
   out_2627288097967823166[459] = 0;
   out_2627288097967823166[460] = 0;
   out_2627288097967823166[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8742394592132095515) {
   out_8742394592132095515[0] = dt*state[7] + state[0];
   out_8742394592132095515[1] = dt*state[8] + state[1];
   out_8742394592132095515[2] = dt*state[9] + state[2];
   out_8742394592132095515[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8742394592132095515[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8742394592132095515[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8742394592132095515[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8742394592132095515[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8742394592132095515[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8742394592132095515[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8742394592132095515[10] = state[10];
   out_8742394592132095515[11] = state[11];
   out_8742394592132095515[12] = state[12];
   out_8742394592132095515[13] = state[13];
   out_8742394592132095515[14] = state[14];
   out_8742394592132095515[15] = state[15];
   out_8742394592132095515[16] = state[16];
   out_8742394592132095515[17] = state[17];
   out_8742394592132095515[18] = state[18];
   out_8742394592132095515[19] = state[19];
   out_8742394592132095515[20] = state[20];
   out_8742394592132095515[21] = state[21];
}
void F_fun(double *state, double dt, double *out_569786763108838867) {
   out_569786763108838867[0] = 1;
   out_569786763108838867[1] = 0;
   out_569786763108838867[2] = 0;
   out_569786763108838867[3] = 0;
   out_569786763108838867[4] = 0;
   out_569786763108838867[5] = 0;
   out_569786763108838867[6] = dt;
   out_569786763108838867[7] = 0;
   out_569786763108838867[8] = 0;
   out_569786763108838867[9] = 0;
   out_569786763108838867[10] = 0;
   out_569786763108838867[11] = 0;
   out_569786763108838867[12] = 0;
   out_569786763108838867[13] = 0;
   out_569786763108838867[14] = 0;
   out_569786763108838867[15] = 0;
   out_569786763108838867[16] = 0;
   out_569786763108838867[17] = 0;
   out_569786763108838867[18] = 0;
   out_569786763108838867[19] = 0;
   out_569786763108838867[20] = 0;
   out_569786763108838867[21] = 0;
   out_569786763108838867[22] = 1;
   out_569786763108838867[23] = 0;
   out_569786763108838867[24] = 0;
   out_569786763108838867[25] = 0;
   out_569786763108838867[26] = 0;
   out_569786763108838867[27] = 0;
   out_569786763108838867[28] = dt;
   out_569786763108838867[29] = 0;
   out_569786763108838867[30] = 0;
   out_569786763108838867[31] = 0;
   out_569786763108838867[32] = 0;
   out_569786763108838867[33] = 0;
   out_569786763108838867[34] = 0;
   out_569786763108838867[35] = 0;
   out_569786763108838867[36] = 0;
   out_569786763108838867[37] = 0;
   out_569786763108838867[38] = 0;
   out_569786763108838867[39] = 0;
   out_569786763108838867[40] = 0;
   out_569786763108838867[41] = 0;
   out_569786763108838867[42] = 0;
   out_569786763108838867[43] = 0;
   out_569786763108838867[44] = 1;
   out_569786763108838867[45] = 0;
   out_569786763108838867[46] = 0;
   out_569786763108838867[47] = 0;
   out_569786763108838867[48] = 0;
   out_569786763108838867[49] = 0;
   out_569786763108838867[50] = dt;
   out_569786763108838867[51] = 0;
   out_569786763108838867[52] = 0;
   out_569786763108838867[53] = 0;
   out_569786763108838867[54] = 0;
   out_569786763108838867[55] = 0;
   out_569786763108838867[56] = 0;
   out_569786763108838867[57] = 0;
   out_569786763108838867[58] = 0;
   out_569786763108838867[59] = 0;
   out_569786763108838867[60] = 0;
   out_569786763108838867[61] = 0;
   out_569786763108838867[62] = 0;
   out_569786763108838867[63] = 0;
   out_569786763108838867[64] = 0;
   out_569786763108838867[65] = 0;
   out_569786763108838867[66] = 1;
   out_569786763108838867[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_569786763108838867[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_569786763108838867[69] = 0;
   out_569786763108838867[70] = 0;
   out_569786763108838867[71] = 0;
   out_569786763108838867[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_569786763108838867[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_569786763108838867[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_569786763108838867[75] = 0;
   out_569786763108838867[76] = 0;
   out_569786763108838867[77] = 0;
   out_569786763108838867[78] = 0;
   out_569786763108838867[79] = 0;
   out_569786763108838867[80] = 0;
   out_569786763108838867[81] = 0;
   out_569786763108838867[82] = 0;
   out_569786763108838867[83] = 0;
   out_569786763108838867[84] = 0;
   out_569786763108838867[85] = 0;
   out_569786763108838867[86] = 0;
   out_569786763108838867[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_569786763108838867[88] = 1;
   out_569786763108838867[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_569786763108838867[90] = 0;
   out_569786763108838867[91] = 0;
   out_569786763108838867[92] = 0;
   out_569786763108838867[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_569786763108838867[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_569786763108838867[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_569786763108838867[96] = 0;
   out_569786763108838867[97] = 0;
   out_569786763108838867[98] = 0;
   out_569786763108838867[99] = 0;
   out_569786763108838867[100] = 0;
   out_569786763108838867[101] = 0;
   out_569786763108838867[102] = 0;
   out_569786763108838867[103] = 0;
   out_569786763108838867[104] = 0;
   out_569786763108838867[105] = 0;
   out_569786763108838867[106] = 0;
   out_569786763108838867[107] = 0;
   out_569786763108838867[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_569786763108838867[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_569786763108838867[110] = 1;
   out_569786763108838867[111] = 0;
   out_569786763108838867[112] = 0;
   out_569786763108838867[113] = 0;
   out_569786763108838867[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_569786763108838867[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_569786763108838867[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_569786763108838867[117] = 0;
   out_569786763108838867[118] = 0;
   out_569786763108838867[119] = 0;
   out_569786763108838867[120] = 0;
   out_569786763108838867[121] = 0;
   out_569786763108838867[122] = 0;
   out_569786763108838867[123] = 0;
   out_569786763108838867[124] = 0;
   out_569786763108838867[125] = 0;
   out_569786763108838867[126] = 0;
   out_569786763108838867[127] = 0;
   out_569786763108838867[128] = 0;
   out_569786763108838867[129] = 0;
   out_569786763108838867[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_569786763108838867[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_569786763108838867[132] = 1;
   out_569786763108838867[133] = 0;
   out_569786763108838867[134] = 0;
   out_569786763108838867[135] = 0;
   out_569786763108838867[136] = 0;
   out_569786763108838867[137] = 0;
   out_569786763108838867[138] = 0;
   out_569786763108838867[139] = 0;
   out_569786763108838867[140] = 0;
   out_569786763108838867[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_569786763108838867[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_569786763108838867[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_569786763108838867[144] = 0;
   out_569786763108838867[145] = 0;
   out_569786763108838867[146] = 0;
   out_569786763108838867[147] = 0;
   out_569786763108838867[148] = 0;
   out_569786763108838867[149] = 0;
   out_569786763108838867[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_569786763108838867[151] = 0;
   out_569786763108838867[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_569786763108838867[153] = 0;
   out_569786763108838867[154] = 1;
   out_569786763108838867[155] = 0;
   out_569786763108838867[156] = 0;
   out_569786763108838867[157] = 0;
   out_569786763108838867[158] = 0;
   out_569786763108838867[159] = 0;
   out_569786763108838867[160] = 0;
   out_569786763108838867[161] = 0;
   out_569786763108838867[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_569786763108838867[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_569786763108838867[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_569786763108838867[165] = 0;
   out_569786763108838867[166] = 0;
   out_569786763108838867[167] = 0;
   out_569786763108838867[168] = 0;
   out_569786763108838867[169] = 0;
   out_569786763108838867[170] = 0;
   out_569786763108838867[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_569786763108838867[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_569786763108838867[173] = 0;
   out_569786763108838867[174] = 0;
   out_569786763108838867[175] = 0;
   out_569786763108838867[176] = 1;
   out_569786763108838867[177] = 0;
   out_569786763108838867[178] = 0;
   out_569786763108838867[179] = 0;
   out_569786763108838867[180] = 0;
   out_569786763108838867[181] = 0;
   out_569786763108838867[182] = 0;
   out_569786763108838867[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_569786763108838867[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_569786763108838867[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_569786763108838867[186] = 0;
   out_569786763108838867[187] = 0;
   out_569786763108838867[188] = 0;
   out_569786763108838867[189] = 0;
   out_569786763108838867[190] = 0;
   out_569786763108838867[191] = 0;
   out_569786763108838867[192] = 0;
   out_569786763108838867[193] = 0;
   out_569786763108838867[194] = 0;
   out_569786763108838867[195] = 0;
   out_569786763108838867[196] = 0;
   out_569786763108838867[197] = 0;
   out_569786763108838867[198] = 1;
   out_569786763108838867[199] = 0;
   out_569786763108838867[200] = 0;
   out_569786763108838867[201] = 0;
   out_569786763108838867[202] = 0;
   out_569786763108838867[203] = 0;
   out_569786763108838867[204] = 0;
   out_569786763108838867[205] = 0;
   out_569786763108838867[206] = 0;
   out_569786763108838867[207] = 0;
   out_569786763108838867[208] = 0;
   out_569786763108838867[209] = 0;
   out_569786763108838867[210] = 0;
   out_569786763108838867[211] = 0;
   out_569786763108838867[212] = 0;
   out_569786763108838867[213] = 0;
   out_569786763108838867[214] = 0;
   out_569786763108838867[215] = 0;
   out_569786763108838867[216] = 0;
   out_569786763108838867[217] = 0;
   out_569786763108838867[218] = 0;
   out_569786763108838867[219] = 0;
   out_569786763108838867[220] = 1;
   out_569786763108838867[221] = 0;
   out_569786763108838867[222] = 0;
   out_569786763108838867[223] = 0;
   out_569786763108838867[224] = 0;
   out_569786763108838867[225] = 0;
   out_569786763108838867[226] = 0;
   out_569786763108838867[227] = 0;
   out_569786763108838867[228] = 0;
   out_569786763108838867[229] = 0;
   out_569786763108838867[230] = 0;
   out_569786763108838867[231] = 0;
   out_569786763108838867[232] = 0;
   out_569786763108838867[233] = 0;
   out_569786763108838867[234] = 0;
   out_569786763108838867[235] = 0;
   out_569786763108838867[236] = 0;
   out_569786763108838867[237] = 0;
   out_569786763108838867[238] = 0;
   out_569786763108838867[239] = 0;
   out_569786763108838867[240] = 0;
   out_569786763108838867[241] = 0;
   out_569786763108838867[242] = 1;
   out_569786763108838867[243] = 0;
   out_569786763108838867[244] = 0;
   out_569786763108838867[245] = 0;
   out_569786763108838867[246] = 0;
   out_569786763108838867[247] = 0;
   out_569786763108838867[248] = 0;
   out_569786763108838867[249] = 0;
   out_569786763108838867[250] = 0;
   out_569786763108838867[251] = 0;
   out_569786763108838867[252] = 0;
   out_569786763108838867[253] = 0;
   out_569786763108838867[254] = 0;
   out_569786763108838867[255] = 0;
   out_569786763108838867[256] = 0;
   out_569786763108838867[257] = 0;
   out_569786763108838867[258] = 0;
   out_569786763108838867[259] = 0;
   out_569786763108838867[260] = 0;
   out_569786763108838867[261] = 0;
   out_569786763108838867[262] = 0;
   out_569786763108838867[263] = 0;
   out_569786763108838867[264] = 1;
   out_569786763108838867[265] = 0;
   out_569786763108838867[266] = 0;
   out_569786763108838867[267] = 0;
   out_569786763108838867[268] = 0;
   out_569786763108838867[269] = 0;
   out_569786763108838867[270] = 0;
   out_569786763108838867[271] = 0;
   out_569786763108838867[272] = 0;
   out_569786763108838867[273] = 0;
   out_569786763108838867[274] = 0;
   out_569786763108838867[275] = 0;
   out_569786763108838867[276] = 0;
   out_569786763108838867[277] = 0;
   out_569786763108838867[278] = 0;
   out_569786763108838867[279] = 0;
   out_569786763108838867[280] = 0;
   out_569786763108838867[281] = 0;
   out_569786763108838867[282] = 0;
   out_569786763108838867[283] = 0;
   out_569786763108838867[284] = 0;
   out_569786763108838867[285] = 0;
   out_569786763108838867[286] = 1;
   out_569786763108838867[287] = 0;
   out_569786763108838867[288] = 0;
   out_569786763108838867[289] = 0;
   out_569786763108838867[290] = 0;
   out_569786763108838867[291] = 0;
   out_569786763108838867[292] = 0;
   out_569786763108838867[293] = 0;
   out_569786763108838867[294] = 0;
   out_569786763108838867[295] = 0;
   out_569786763108838867[296] = 0;
   out_569786763108838867[297] = 0;
   out_569786763108838867[298] = 0;
   out_569786763108838867[299] = 0;
   out_569786763108838867[300] = 0;
   out_569786763108838867[301] = 0;
   out_569786763108838867[302] = 0;
   out_569786763108838867[303] = 0;
   out_569786763108838867[304] = 0;
   out_569786763108838867[305] = 0;
   out_569786763108838867[306] = 0;
   out_569786763108838867[307] = 0;
   out_569786763108838867[308] = 1;
   out_569786763108838867[309] = 0;
   out_569786763108838867[310] = 0;
   out_569786763108838867[311] = 0;
   out_569786763108838867[312] = 0;
   out_569786763108838867[313] = 0;
   out_569786763108838867[314] = 0;
   out_569786763108838867[315] = 0;
   out_569786763108838867[316] = 0;
   out_569786763108838867[317] = 0;
   out_569786763108838867[318] = 0;
   out_569786763108838867[319] = 0;
   out_569786763108838867[320] = 0;
   out_569786763108838867[321] = 0;
   out_569786763108838867[322] = 0;
   out_569786763108838867[323] = 0;
   out_569786763108838867[324] = 0;
   out_569786763108838867[325] = 0;
   out_569786763108838867[326] = 0;
   out_569786763108838867[327] = 0;
   out_569786763108838867[328] = 0;
   out_569786763108838867[329] = 0;
   out_569786763108838867[330] = 1;
   out_569786763108838867[331] = 0;
   out_569786763108838867[332] = 0;
   out_569786763108838867[333] = 0;
   out_569786763108838867[334] = 0;
   out_569786763108838867[335] = 0;
   out_569786763108838867[336] = 0;
   out_569786763108838867[337] = 0;
   out_569786763108838867[338] = 0;
   out_569786763108838867[339] = 0;
   out_569786763108838867[340] = 0;
   out_569786763108838867[341] = 0;
   out_569786763108838867[342] = 0;
   out_569786763108838867[343] = 0;
   out_569786763108838867[344] = 0;
   out_569786763108838867[345] = 0;
   out_569786763108838867[346] = 0;
   out_569786763108838867[347] = 0;
   out_569786763108838867[348] = 0;
   out_569786763108838867[349] = 0;
   out_569786763108838867[350] = 0;
   out_569786763108838867[351] = 0;
   out_569786763108838867[352] = 1;
   out_569786763108838867[353] = 0;
   out_569786763108838867[354] = 0;
   out_569786763108838867[355] = 0;
   out_569786763108838867[356] = 0;
   out_569786763108838867[357] = 0;
   out_569786763108838867[358] = 0;
   out_569786763108838867[359] = 0;
   out_569786763108838867[360] = 0;
   out_569786763108838867[361] = 0;
   out_569786763108838867[362] = 0;
   out_569786763108838867[363] = 0;
   out_569786763108838867[364] = 0;
   out_569786763108838867[365] = 0;
   out_569786763108838867[366] = 0;
   out_569786763108838867[367] = 0;
   out_569786763108838867[368] = 0;
   out_569786763108838867[369] = 0;
   out_569786763108838867[370] = 0;
   out_569786763108838867[371] = 0;
   out_569786763108838867[372] = 0;
   out_569786763108838867[373] = 0;
   out_569786763108838867[374] = 1;
   out_569786763108838867[375] = 0;
   out_569786763108838867[376] = 0;
   out_569786763108838867[377] = 0;
   out_569786763108838867[378] = 0;
   out_569786763108838867[379] = 0;
   out_569786763108838867[380] = 0;
   out_569786763108838867[381] = 0;
   out_569786763108838867[382] = 0;
   out_569786763108838867[383] = 0;
   out_569786763108838867[384] = 0;
   out_569786763108838867[385] = 0;
   out_569786763108838867[386] = 0;
   out_569786763108838867[387] = 0;
   out_569786763108838867[388] = 0;
   out_569786763108838867[389] = 0;
   out_569786763108838867[390] = 0;
   out_569786763108838867[391] = 0;
   out_569786763108838867[392] = 0;
   out_569786763108838867[393] = 0;
   out_569786763108838867[394] = 0;
   out_569786763108838867[395] = 0;
   out_569786763108838867[396] = 1;
   out_569786763108838867[397] = 0;
   out_569786763108838867[398] = 0;
   out_569786763108838867[399] = 0;
   out_569786763108838867[400] = 0;
   out_569786763108838867[401] = 0;
   out_569786763108838867[402] = 0;
   out_569786763108838867[403] = 0;
   out_569786763108838867[404] = 0;
   out_569786763108838867[405] = 0;
   out_569786763108838867[406] = 0;
   out_569786763108838867[407] = 0;
   out_569786763108838867[408] = 0;
   out_569786763108838867[409] = 0;
   out_569786763108838867[410] = 0;
   out_569786763108838867[411] = 0;
   out_569786763108838867[412] = 0;
   out_569786763108838867[413] = 0;
   out_569786763108838867[414] = 0;
   out_569786763108838867[415] = 0;
   out_569786763108838867[416] = 0;
   out_569786763108838867[417] = 0;
   out_569786763108838867[418] = 1;
   out_569786763108838867[419] = 0;
   out_569786763108838867[420] = 0;
   out_569786763108838867[421] = 0;
   out_569786763108838867[422] = 0;
   out_569786763108838867[423] = 0;
   out_569786763108838867[424] = 0;
   out_569786763108838867[425] = 0;
   out_569786763108838867[426] = 0;
   out_569786763108838867[427] = 0;
   out_569786763108838867[428] = 0;
   out_569786763108838867[429] = 0;
   out_569786763108838867[430] = 0;
   out_569786763108838867[431] = 0;
   out_569786763108838867[432] = 0;
   out_569786763108838867[433] = 0;
   out_569786763108838867[434] = 0;
   out_569786763108838867[435] = 0;
   out_569786763108838867[436] = 0;
   out_569786763108838867[437] = 0;
   out_569786763108838867[438] = 0;
   out_569786763108838867[439] = 0;
   out_569786763108838867[440] = 1;
}
void h_4(double *state, double *unused, double *out_5603552778612686787) {
   out_5603552778612686787[0] = state[10] + state[13];
   out_5603552778612686787[1] = state[11] + state[14];
   out_5603552778612686787[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1767891489218198864) {
   out_1767891489218198864[0] = 0;
   out_1767891489218198864[1] = 0;
   out_1767891489218198864[2] = 0;
   out_1767891489218198864[3] = 0;
   out_1767891489218198864[4] = 0;
   out_1767891489218198864[5] = 0;
   out_1767891489218198864[6] = 0;
   out_1767891489218198864[7] = 0;
   out_1767891489218198864[8] = 0;
   out_1767891489218198864[9] = 0;
   out_1767891489218198864[10] = 1;
   out_1767891489218198864[11] = 0;
   out_1767891489218198864[12] = 0;
   out_1767891489218198864[13] = 1;
   out_1767891489218198864[14] = 0;
   out_1767891489218198864[15] = 0;
   out_1767891489218198864[16] = 0;
   out_1767891489218198864[17] = 0;
   out_1767891489218198864[18] = 0;
   out_1767891489218198864[19] = 0;
   out_1767891489218198864[20] = 0;
   out_1767891489218198864[21] = 0;
   out_1767891489218198864[22] = 0;
   out_1767891489218198864[23] = 0;
   out_1767891489218198864[24] = 0;
   out_1767891489218198864[25] = 0;
   out_1767891489218198864[26] = 0;
   out_1767891489218198864[27] = 0;
   out_1767891489218198864[28] = 0;
   out_1767891489218198864[29] = 0;
   out_1767891489218198864[30] = 0;
   out_1767891489218198864[31] = 0;
   out_1767891489218198864[32] = 0;
   out_1767891489218198864[33] = 1;
   out_1767891489218198864[34] = 0;
   out_1767891489218198864[35] = 0;
   out_1767891489218198864[36] = 1;
   out_1767891489218198864[37] = 0;
   out_1767891489218198864[38] = 0;
   out_1767891489218198864[39] = 0;
   out_1767891489218198864[40] = 0;
   out_1767891489218198864[41] = 0;
   out_1767891489218198864[42] = 0;
   out_1767891489218198864[43] = 0;
   out_1767891489218198864[44] = 0;
   out_1767891489218198864[45] = 0;
   out_1767891489218198864[46] = 0;
   out_1767891489218198864[47] = 0;
   out_1767891489218198864[48] = 0;
   out_1767891489218198864[49] = 0;
   out_1767891489218198864[50] = 0;
   out_1767891489218198864[51] = 0;
   out_1767891489218198864[52] = 0;
   out_1767891489218198864[53] = 0;
   out_1767891489218198864[54] = 0;
   out_1767891489218198864[55] = 0;
   out_1767891489218198864[56] = 1;
   out_1767891489218198864[57] = 0;
   out_1767891489218198864[58] = 0;
   out_1767891489218198864[59] = 1;
   out_1767891489218198864[60] = 0;
   out_1767891489218198864[61] = 0;
   out_1767891489218198864[62] = 0;
   out_1767891489218198864[63] = 0;
   out_1767891489218198864[64] = 0;
   out_1767891489218198864[65] = 0;
}
void h_9(double *state, double *unused, double *out_7135624971026263438) {
   out_7135624971026263438[0] = state[10];
   out_7135624971026263438[1] = state[11];
   out_7135624971026263438[2] = state[12];
}
void H_9(double *state, double *unused, double *out_9055110424482646334) {
   out_9055110424482646334[0] = 0;
   out_9055110424482646334[1] = 0;
   out_9055110424482646334[2] = 0;
   out_9055110424482646334[3] = 0;
   out_9055110424482646334[4] = 0;
   out_9055110424482646334[5] = 0;
   out_9055110424482646334[6] = 0;
   out_9055110424482646334[7] = 0;
   out_9055110424482646334[8] = 0;
   out_9055110424482646334[9] = 0;
   out_9055110424482646334[10] = 1;
   out_9055110424482646334[11] = 0;
   out_9055110424482646334[12] = 0;
   out_9055110424482646334[13] = 0;
   out_9055110424482646334[14] = 0;
   out_9055110424482646334[15] = 0;
   out_9055110424482646334[16] = 0;
   out_9055110424482646334[17] = 0;
   out_9055110424482646334[18] = 0;
   out_9055110424482646334[19] = 0;
   out_9055110424482646334[20] = 0;
   out_9055110424482646334[21] = 0;
   out_9055110424482646334[22] = 0;
   out_9055110424482646334[23] = 0;
   out_9055110424482646334[24] = 0;
   out_9055110424482646334[25] = 0;
   out_9055110424482646334[26] = 0;
   out_9055110424482646334[27] = 0;
   out_9055110424482646334[28] = 0;
   out_9055110424482646334[29] = 0;
   out_9055110424482646334[30] = 0;
   out_9055110424482646334[31] = 0;
   out_9055110424482646334[32] = 0;
   out_9055110424482646334[33] = 1;
   out_9055110424482646334[34] = 0;
   out_9055110424482646334[35] = 0;
   out_9055110424482646334[36] = 0;
   out_9055110424482646334[37] = 0;
   out_9055110424482646334[38] = 0;
   out_9055110424482646334[39] = 0;
   out_9055110424482646334[40] = 0;
   out_9055110424482646334[41] = 0;
   out_9055110424482646334[42] = 0;
   out_9055110424482646334[43] = 0;
   out_9055110424482646334[44] = 0;
   out_9055110424482646334[45] = 0;
   out_9055110424482646334[46] = 0;
   out_9055110424482646334[47] = 0;
   out_9055110424482646334[48] = 0;
   out_9055110424482646334[49] = 0;
   out_9055110424482646334[50] = 0;
   out_9055110424482646334[51] = 0;
   out_9055110424482646334[52] = 0;
   out_9055110424482646334[53] = 0;
   out_9055110424482646334[54] = 0;
   out_9055110424482646334[55] = 0;
   out_9055110424482646334[56] = 1;
   out_9055110424482646334[57] = 0;
   out_9055110424482646334[58] = 0;
   out_9055110424482646334[59] = 0;
   out_9055110424482646334[60] = 0;
   out_9055110424482646334[61] = 0;
   out_9055110424482646334[62] = 0;
   out_9055110424482646334[63] = 0;
   out_9055110424482646334[64] = 0;
   out_9055110424482646334[65] = 0;
}
void h_10(double *state, double *unused, double *out_7405996803063147821) {
   out_7405996803063147821[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7405996803063147821[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7405996803063147821[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4449009372014597764) {
   out_4449009372014597764[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4449009372014597764[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4449009372014597764[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4449009372014597764[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4449009372014597764[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4449009372014597764[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4449009372014597764[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4449009372014597764[7] = 0;
   out_4449009372014597764[8] = 0;
   out_4449009372014597764[9] = 0;
   out_4449009372014597764[10] = 0;
   out_4449009372014597764[11] = 0;
   out_4449009372014597764[12] = 0;
   out_4449009372014597764[13] = 0;
   out_4449009372014597764[14] = 0;
   out_4449009372014597764[15] = 0;
   out_4449009372014597764[16] = 1;
   out_4449009372014597764[17] = 0;
   out_4449009372014597764[18] = 0;
   out_4449009372014597764[19] = 1;
   out_4449009372014597764[20] = 0;
   out_4449009372014597764[21] = 0;
   out_4449009372014597764[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4449009372014597764[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4449009372014597764[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4449009372014597764[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4449009372014597764[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4449009372014597764[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4449009372014597764[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4449009372014597764[29] = 0;
   out_4449009372014597764[30] = 0;
   out_4449009372014597764[31] = 0;
   out_4449009372014597764[32] = 0;
   out_4449009372014597764[33] = 0;
   out_4449009372014597764[34] = 0;
   out_4449009372014597764[35] = 0;
   out_4449009372014597764[36] = 0;
   out_4449009372014597764[37] = 0;
   out_4449009372014597764[38] = 0;
   out_4449009372014597764[39] = 1;
   out_4449009372014597764[40] = 0;
   out_4449009372014597764[41] = 0;
   out_4449009372014597764[42] = 1;
   out_4449009372014597764[43] = 0;
   out_4449009372014597764[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4449009372014597764[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4449009372014597764[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4449009372014597764[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4449009372014597764[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4449009372014597764[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4449009372014597764[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4449009372014597764[51] = 0;
   out_4449009372014597764[52] = 0;
   out_4449009372014597764[53] = 0;
   out_4449009372014597764[54] = 0;
   out_4449009372014597764[55] = 0;
   out_4449009372014597764[56] = 0;
   out_4449009372014597764[57] = 0;
   out_4449009372014597764[58] = 0;
   out_4449009372014597764[59] = 0;
   out_4449009372014597764[60] = 0;
   out_4449009372014597764[61] = 0;
   out_4449009372014597764[62] = 1;
   out_4449009372014597764[63] = 0;
   out_4449009372014597764[64] = 0;
   out_4449009372014597764[65] = 1;
}
void h_12(double *state, double *unused, double *out_5169321085057836161) {
   out_5169321085057836161[0] = state[0];
   out_5169321085057836161[1] = state[1];
   out_5169321085057836161[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6787347897250160659) {
   out_6787347897250160659[0] = 1;
   out_6787347897250160659[1] = 0;
   out_6787347897250160659[2] = 0;
   out_6787347897250160659[3] = 0;
   out_6787347897250160659[4] = 0;
   out_6787347897250160659[5] = 0;
   out_6787347897250160659[6] = 0;
   out_6787347897250160659[7] = 0;
   out_6787347897250160659[8] = 0;
   out_6787347897250160659[9] = 0;
   out_6787347897250160659[10] = 0;
   out_6787347897250160659[11] = 0;
   out_6787347897250160659[12] = 0;
   out_6787347897250160659[13] = 0;
   out_6787347897250160659[14] = 0;
   out_6787347897250160659[15] = 0;
   out_6787347897250160659[16] = 0;
   out_6787347897250160659[17] = 0;
   out_6787347897250160659[18] = 0;
   out_6787347897250160659[19] = 0;
   out_6787347897250160659[20] = 0;
   out_6787347897250160659[21] = 0;
   out_6787347897250160659[22] = 0;
   out_6787347897250160659[23] = 1;
   out_6787347897250160659[24] = 0;
   out_6787347897250160659[25] = 0;
   out_6787347897250160659[26] = 0;
   out_6787347897250160659[27] = 0;
   out_6787347897250160659[28] = 0;
   out_6787347897250160659[29] = 0;
   out_6787347897250160659[30] = 0;
   out_6787347897250160659[31] = 0;
   out_6787347897250160659[32] = 0;
   out_6787347897250160659[33] = 0;
   out_6787347897250160659[34] = 0;
   out_6787347897250160659[35] = 0;
   out_6787347897250160659[36] = 0;
   out_6787347897250160659[37] = 0;
   out_6787347897250160659[38] = 0;
   out_6787347897250160659[39] = 0;
   out_6787347897250160659[40] = 0;
   out_6787347897250160659[41] = 0;
   out_6787347897250160659[42] = 0;
   out_6787347897250160659[43] = 0;
   out_6787347897250160659[44] = 0;
   out_6787347897250160659[45] = 0;
   out_6787347897250160659[46] = 1;
   out_6787347897250160659[47] = 0;
   out_6787347897250160659[48] = 0;
   out_6787347897250160659[49] = 0;
   out_6787347897250160659[50] = 0;
   out_6787347897250160659[51] = 0;
   out_6787347897250160659[52] = 0;
   out_6787347897250160659[53] = 0;
   out_6787347897250160659[54] = 0;
   out_6787347897250160659[55] = 0;
   out_6787347897250160659[56] = 0;
   out_6787347897250160659[57] = 0;
   out_6787347897250160659[58] = 0;
   out_6787347897250160659[59] = 0;
   out_6787347897250160659[60] = 0;
   out_6787347897250160659[61] = 0;
   out_6787347897250160659[62] = 0;
   out_6787347897250160659[63] = 0;
   out_6787347897250160659[64] = 0;
   out_6787347897250160659[65] = 0;
}
void h_35(double *state, double *unused, double *out_4323656818132815336) {
   out_4323656818132815336[0] = state[7];
   out_4323656818132815336[1] = state[8];
   out_4323656818132815336[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8913833144134377248) {
   out_8913833144134377248[0] = 0;
   out_8913833144134377248[1] = 0;
   out_8913833144134377248[2] = 0;
   out_8913833144134377248[3] = 0;
   out_8913833144134377248[4] = 0;
   out_8913833144134377248[5] = 0;
   out_8913833144134377248[6] = 0;
   out_8913833144134377248[7] = 1;
   out_8913833144134377248[8] = 0;
   out_8913833144134377248[9] = 0;
   out_8913833144134377248[10] = 0;
   out_8913833144134377248[11] = 0;
   out_8913833144134377248[12] = 0;
   out_8913833144134377248[13] = 0;
   out_8913833144134377248[14] = 0;
   out_8913833144134377248[15] = 0;
   out_8913833144134377248[16] = 0;
   out_8913833144134377248[17] = 0;
   out_8913833144134377248[18] = 0;
   out_8913833144134377248[19] = 0;
   out_8913833144134377248[20] = 0;
   out_8913833144134377248[21] = 0;
   out_8913833144134377248[22] = 0;
   out_8913833144134377248[23] = 0;
   out_8913833144134377248[24] = 0;
   out_8913833144134377248[25] = 0;
   out_8913833144134377248[26] = 0;
   out_8913833144134377248[27] = 0;
   out_8913833144134377248[28] = 0;
   out_8913833144134377248[29] = 0;
   out_8913833144134377248[30] = 1;
   out_8913833144134377248[31] = 0;
   out_8913833144134377248[32] = 0;
   out_8913833144134377248[33] = 0;
   out_8913833144134377248[34] = 0;
   out_8913833144134377248[35] = 0;
   out_8913833144134377248[36] = 0;
   out_8913833144134377248[37] = 0;
   out_8913833144134377248[38] = 0;
   out_8913833144134377248[39] = 0;
   out_8913833144134377248[40] = 0;
   out_8913833144134377248[41] = 0;
   out_8913833144134377248[42] = 0;
   out_8913833144134377248[43] = 0;
   out_8913833144134377248[44] = 0;
   out_8913833144134377248[45] = 0;
   out_8913833144134377248[46] = 0;
   out_8913833144134377248[47] = 0;
   out_8913833144134377248[48] = 0;
   out_8913833144134377248[49] = 0;
   out_8913833144134377248[50] = 0;
   out_8913833144134377248[51] = 0;
   out_8913833144134377248[52] = 0;
   out_8913833144134377248[53] = 1;
   out_8913833144134377248[54] = 0;
   out_8913833144134377248[55] = 0;
   out_8913833144134377248[56] = 0;
   out_8913833144134377248[57] = 0;
   out_8913833144134377248[58] = 0;
   out_8913833144134377248[59] = 0;
   out_8913833144134377248[60] = 0;
   out_8913833144134377248[61] = 0;
   out_8913833144134377248[62] = 0;
   out_8913833144134377248[63] = 0;
   out_8913833144134377248[64] = 0;
   out_8913833144134377248[65] = 0;
}
void h_32(double *state, double *unused, double *out_3228059702760003102) {
   out_3228059702760003102[0] = state[3];
   out_3228059702760003102[1] = state[4];
   out_3228059702760003102[2] = state[5];
   out_3228059702760003102[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6646429506726719872) {
   out_6646429506726719872[0] = 0;
   out_6646429506726719872[1] = 0;
   out_6646429506726719872[2] = 0;
   out_6646429506726719872[3] = 1;
   out_6646429506726719872[4] = 0;
   out_6646429506726719872[5] = 0;
   out_6646429506726719872[6] = 0;
   out_6646429506726719872[7] = 0;
   out_6646429506726719872[8] = 0;
   out_6646429506726719872[9] = 0;
   out_6646429506726719872[10] = 0;
   out_6646429506726719872[11] = 0;
   out_6646429506726719872[12] = 0;
   out_6646429506726719872[13] = 0;
   out_6646429506726719872[14] = 0;
   out_6646429506726719872[15] = 0;
   out_6646429506726719872[16] = 0;
   out_6646429506726719872[17] = 0;
   out_6646429506726719872[18] = 0;
   out_6646429506726719872[19] = 0;
   out_6646429506726719872[20] = 0;
   out_6646429506726719872[21] = 0;
   out_6646429506726719872[22] = 0;
   out_6646429506726719872[23] = 0;
   out_6646429506726719872[24] = 0;
   out_6646429506726719872[25] = 0;
   out_6646429506726719872[26] = 1;
   out_6646429506726719872[27] = 0;
   out_6646429506726719872[28] = 0;
   out_6646429506726719872[29] = 0;
   out_6646429506726719872[30] = 0;
   out_6646429506726719872[31] = 0;
   out_6646429506726719872[32] = 0;
   out_6646429506726719872[33] = 0;
   out_6646429506726719872[34] = 0;
   out_6646429506726719872[35] = 0;
   out_6646429506726719872[36] = 0;
   out_6646429506726719872[37] = 0;
   out_6646429506726719872[38] = 0;
   out_6646429506726719872[39] = 0;
   out_6646429506726719872[40] = 0;
   out_6646429506726719872[41] = 0;
   out_6646429506726719872[42] = 0;
   out_6646429506726719872[43] = 0;
   out_6646429506726719872[44] = 0;
   out_6646429506726719872[45] = 0;
   out_6646429506726719872[46] = 0;
   out_6646429506726719872[47] = 0;
   out_6646429506726719872[48] = 0;
   out_6646429506726719872[49] = 1;
   out_6646429506726719872[50] = 0;
   out_6646429506726719872[51] = 0;
   out_6646429506726719872[52] = 0;
   out_6646429506726719872[53] = 0;
   out_6646429506726719872[54] = 0;
   out_6646429506726719872[55] = 0;
   out_6646429506726719872[56] = 0;
   out_6646429506726719872[57] = 0;
   out_6646429506726719872[58] = 0;
   out_6646429506726719872[59] = 0;
   out_6646429506726719872[60] = 0;
   out_6646429506726719872[61] = 0;
   out_6646429506726719872[62] = 0;
   out_6646429506726719872[63] = 0;
   out_6646429506726719872[64] = 0;
   out_6646429506726719872[65] = 0;
   out_6646429506726719872[66] = 0;
   out_6646429506726719872[67] = 0;
   out_6646429506726719872[68] = 0;
   out_6646429506726719872[69] = 0;
   out_6646429506726719872[70] = 0;
   out_6646429506726719872[71] = 0;
   out_6646429506726719872[72] = 1;
   out_6646429506726719872[73] = 0;
   out_6646429506726719872[74] = 0;
   out_6646429506726719872[75] = 0;
   out_6646429506726719872[76] = 0;
   out_6646429506726719872[77] = 0;
   out_6646429506726719872[78] = 0;
   out_6646429506726719872[79] = 0;
   out_6646429506726719872[80] = 0;
   out_6646429506726719872[81] = 0;
   out_6646429506726719872[82] = 0;
   out_6646429506726719872[83] = 0;
   out_6646429506726719872[84] = 0;
   out_6646429506726719872[85] = 0;
   out_6646429506726719872[86] = 0;
   out_6646429506726719872[87] = 0;
}
void h_13(double *state, double *unused, double *out_6305347991969589285) {
   out_6305347991969589285[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6305347991969589285[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6305347991969589285[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3095891855353063491) {
   out_3095891855353063491[0] = 0;
   out_3095891855353063491[1] = 0;
   out_3095891855353063491[2] = 0;
   out_3095891855353063491[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3095891855353063491[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3095891855353063491[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3095891855353063491[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3095891855353063491[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3095891855353063491[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3095891855353063491[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3095891855353063491[10] = 0;
   out_3095891855353063491[11] = 0;
   out_3095891855353063491[12] = 0;
   out_3095891855353063491[13] = 0;
   out_3095891855353063491[14] = 0;
   out_3095891855353063491[15] = 0;
   out_3095891855353063491[16] = 0;
   out_3095891855353063491[17] = 0;
   out_3095891855353063491[18] = 0;
   out_3095891855353063491[19] = 0;
   out_3095891855353063491[20] = 0;
   out_3095891855353063491[21] = 0;
   out_3095891855353063491[22] = 0;
   out_3095891855353063491[23] = 0;
   out_3095891855353063491[24] = 0;
   out_3095891855353063491[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3095891855353063491[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3095891855353063491[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3095891855353063491[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3095891855353063491[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3095891855353063491[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3095891855353063491[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3095891855353063491[32] = 0;
   out_3095891855353063491[33] = 0;
   out_3095891855353063491[34] = 0;
   out_3095891855353063491[35] = 0;
   out_3095891855353063491[36] = 0;
   out_3095891855353063491[37] = 0;
   out_3095891855353063491[38] = 0;
   out_3095891855353063491[39] = 0;
   out_3095891855353063491[40] = 0;
   out_3095891855353063491[41] = 0;
   out_3095891855353063491[42] = 0;
   out_3095891855353063491[43] = 0;
   out_3095891855353063491[44] = 0;
   out_3095891855353063491[45] = 0;
   out_3095891855353063491[46] = 0;
   out_3095891855353063491[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3095891855353063491[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3095891855353063491[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3095891855353063491[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3095891855353063491[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3095891855353063491[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3095891855353063491[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3095891855353063491[54] = 0;
   out_3095891855353063491[55] = 0;
   out_3095891855353063491[56] = 0;
   out_3095891855353063491[57] = 0;
   out_3095891855353063491[58] = 0;
   out_3095891855353063491[59] = 0;
   out_3095891855353063491[60] = 0;
   out_3095891855353063491[61] = 0;
   out_3095891855353063491[62] = 0;
   out_3095891855353063491[63] = 0;
   out_3095891855353063491[64] = 0;
   out_3095891855353063491[65] = 0;
}
void h_14(double *state, double *unused, double *out_7135624971026263438) {
   out_7135624971026263438[0] = state[10];
   out_7135624971026263438[1] = state[11];
   out_7135624971026263438[2] = state[12];
}
void H_14(double *state, double *unused, double *out_9055110424482646334) {
   out_9055110424482646334[0] = 0;
   out_9055110424482646334[1] = 0;
   out_9055110424482646334[2] = 0;
   out_9055110424482646334[3] = 0;
   out_9055110424482646334[4] = 0;
   out_9055110424482646334[5] = 0;
   out_9055110424482646334[6] = 0;
   out_9055110424482646334[7] = 0;
   out_9055110424482646334[8] = 0;
   out_9055110424482646334[9] = 0;
   out_9055110424482646334[10] = 1;
   out_9055110424482646334[11] = 0;
   out_9055110424482646334[12] = 0;
   out_9055110424482646334[13] = 0;
   out_9055110424482646334[14] = 0;
   out_9055110424482646334[15] = 0;
   out_9055110424482646334[16] = 0;
   out_9055110424482646334[17] = 0;
   out_9055110424482646334[18] = 0;
   out_9055110424482646334[19] = 0;
   out_9055110424482646334[20] = 0;
   out_9055110424482646334[21] = 0;
   out_9055110424482646334[22] = 0;
   out_9055110424482646334[23] = 0;
   out_9055110424482646334[24] = 0;
   out_9055110424482646334[25] = 0;
   out_9055110424482646334[26] = 0;
   out_9055110424482646334[27] = 0;
   out_9055110424482646334[28] = 0;
   out_9055110424482646334[29] = 0;
   out_9055110424482646334[30] = 0;
   out_9055110424482646334[31] = 0;
   out_9055110424482646334[32] = 0;
   out_9055110424482646334[33] = 1;
   out_9055110424482646334[34] = 0;
   out_9055110424482646334[35] = 0;
   out_9055110424482646334[36] = 0;
   out_9055110424482646334[37] = 0;
   out_9055110424482646334[38] = 0;
   out_9055110424482646334[39] = 0;
   out_9055110424482646334[40] = 0;
   out_9055110424482646334[41] = 0;
   out_9055110424482646334[42] = 0;
   out_9055110424482646334[43] = 0;
   out_9055110424482646334[44] = 0;
   out_9055110424482646334[45] = 0;
   out_9055110424482646334[46] = 0;
   out_9055110424482646334[47] = 0;
   out_9055110424482646334[48] = 0;
   out_9055110424482646334[49] = 0;
   out_9055110424482646334[50] = 0;
   out_9055110424482646334[51] = 0;
   out_9055110424482646334[52] = 0;
   out_9055110424482646334[53] = 0;
   out_9055110424482646334[54] = 0;
   out_9055110424482646334[55] = 0;
   out_9055110424482646334[56] = 1;
   out_9055110424482646334[57] = 0;
   out_9055110424482646334[58] = 0;
   out_9055110424482646334[59] = 0;
   out_9055110424482646334[60] = 0;
   out_9055110424482646334[61] = 0;
   out_9055110424482646334[62] = 0;
   out_9055110424482646334[63] = 0;
   out_9055110424482646334[64] = 0;
   out_9055110424482646334[65] = 0;
}
void h_33(double *state, double *unused, double *out_6801844409662643527) {
   out_6801844409662643527[0] = state[16];
   out_6801844409662643527[1] = state[17];
   out_6801844409662643527[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8285110551229663844) {
   out_8285110551229663844[0] = 0;
   out_8285110551229663844[1] = 0;
   out_8285110551229663844[2] = 0;
   out_8285110551229663844[3] = 0;
   out_8285110551229663844[4] = 0;
   out_8285110551229663844[5] = 0;
   out_8285110551229663844[6] = 0;
   out_8285110551229663844[7] = 0;
   out_8285110551229663844[8] = 0;
   out_8285110551229663844[9] = 0;
   out_8285110551229663844[10] = 0;
   out_8285110551229663844[11] = 0;
   out_8285110551229663844[12] = 0;
   out_8285110551229663844[13] = 0;
   out_8285110551229663844[14] = 0;
   out_8285110551229663844[15] = 0;
   out_8285110551229663844[16] = 1;
   out_8285110551229663844[17] = 0;
   out_8285110551229663844[18] = 0;
   out_8285110551229663844[19] = 0;
   out_8285110551229663844[20] = 0;
   out_8285110551229663844[21] = 0;
   out_8285110551229663844[22] = 0;
   out_8285110551229663844[23] = 0;
   out_8285110551229663844[24] = 0;
   out_8285110551229663844[25] = 0;
   out_8285110551229663844[26] = 0;
   out_8285110551229663844[27] = 0;
   out_8285110551229663844[28] = 0;
   out_8285110551229663844[29] = 0;
   out_8285110551229663844[30] = 0;
   out_8285110551229663844[31] = 0;
   out_8285110551229663844[32] = 0;
   out_8285110551229663844[33] = 0;
   out_8285110551229663844[34] = 0;
   out_8285110551229663844[35] = 0;
   out_8285110551229663844[36] = 0;
   out_8285110551229663844[37] = 0;
   out_8285110551229663844[38] = 0;
   out_8285110551229663844[39] = 1;
   out_8285110551229663844[40] = 0;
   out_8285110551229663844[41] = 0;
   out_8285110551229663844[42] = 0;
   out_8285110551229663844[43] = 0;
   out_8285110551229663844[44] = 0;
   out_8285110551229663844[45] = 0;
   out_8285110551229663844[46] = 0;
   out_8285110551229663844[47] = 0;
   out_8285110551229663844[48] = 0;
   out_8285110551229663844[49] = 0;
   out_8285110551229663844[50] = 0;
   out_8285110551229663844[51] = 0;
   out_8285110551229663844[52] = 0;
   out_8285110551229663844[53] = 0;
   out_8285110551229663844[54] = 0;
   out_8285110551229663844[55] = 0;
   out_8285110551229663844[56] = 0;
   out_8285110551229663844[57] = 0;
   out_8285110551229663844[58] = 0;
   out_8285110551229663844[59] = 0;
   out_8285110551229663844[60] = 0;
   out_8285110551229663844[61] = 0;
   out_8285110551229663844[62] = 1;
   out_8285110551229663844[63] = 0;
   out_8285110551229663844[64] = 0;
   out_8285110551229663844[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1345249788758015084) {
  H(in_vec, out_1345249788758015084);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7719634259818376092) {
  err_fun(nom_x, delta_x, out_7719634259818376092);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6741930509538719735) {
  inv_err_fun(nom_x, true_x, out_6741930509538719735);
}
void live_H_mod_fun(double *state, double *out_2627288097967823166) {
  H_mod_fun(state, out_2627288097967823166);
}
void live_f_fun(double *state, double dt, double *out_8742394592132095515) {
  f_fun(state,  dt, out_8742394592132095515);
}
void live_F_fun(double *state, double dt, double *out_569786763108838867) {
  F_fun(state,  dt, out_569786763108838867);
}
void live_h_4(double *state, double *unused, double *out_5603552778612686787) {
  h_4(state, unused, out_5603552778612686787);
}
void live_H_4(double *state, double *unused, double *out_1767891489218198864) {
  H_4(state, unused, out_1767891489218198864);
}
void live_h_9(double *state, double *unused, double *out_7135624971026263438) {
  h_9(state, unused, out_7135624971026263438);
}
void live_H_9(double *state, double *unused, double *out_9055110424482646334) {
  H_9(state, unused, out_9055110424482646334);
}
void live_h_10(double *state, double *unused, double *out_7405996803063147821) {
  h_10(state, unused, out_7405996803063147821);
}
void live_H_10(double *state, double *unused, double *out_4449009372014597764) {
  H_10(state, unused, out_4449009372014597764);
}
void live_h_12(double *state, double *unused, double *out_5169321085057836161) {
  h_12(state, unused, out_5169321085057836161);
}
void live_H_12(double *state, double *unused, double *out_6787347897250160659) {
  H_12(state, unused, out_6787347897250160659);
}
void live_h_35(double *state, double *unused, double *out_4323656818132815336) {
  h_35(state, unused, out_4323656818132815336);
}
void live_H_35(double *state, double *unused, double *out_8913833144134377248) {
  H_35(state, unused, out_8913833144134377248);
}
void live_h_32(double *state, double *unused, double *out_3228059702760003102) {
  h_32(state, unused, out_3228059702760003102);
}
void live_H_32(double *state, double *unused, double *out_6646429506726719872) {
  H_32(state, unused, out_6646429506726719872);
}
void live_h_13(double *state, double *unused, double *out_6305347991969589285) {
  h_13(state, unused, out_6305347991969589285);
}
void live_H_13(double *state, double *unused, double *out_3095891855353063491) {
  H_13(state, unused, out_3095891855353063491);
}
void live_h_14(double *state, double *unused, double *out_7135624971026263438) {
  h_14(state, unused, out_7135624971026263438);
}
void live_H_14(double *state, double *unused, double *out_9055110424482646334) {
  H_14(state, unused, out_9055110424482646334);
}
void live_h_33(double *state, double *unused, double *out_6801844409662643527) {
  h_33(state, unused, out_6801844409662643527);
}
void live_H_33(double *state, double *unused, double *out_8285110551229663844) {
  H_33(state, unused, out_8285110551229663844);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
